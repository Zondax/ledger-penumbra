/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_COSMOS_ORM_V1ALPHA1_COSMOS_ORM_V1ALPHA1_SCHEMA_PB_H_INCLUDED
#define PB_COSMOS_ORM_V1ALPHA1_COSMOS_ORM_V1ALPHA1_SCHEMA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* StorageType */
typedef enum _cosmos_orm_v1alpha1_StorageType {
    /* STORAGE_TYPE_DEFAULT_UNSPECIFIED indicates the persistent storage where all
 data is stored in the regular Merkle-tree backed KV-store. */
    cosmos_orm_v1alpha1_StorageType_STORAGE_TYPE_DEFAULT_UNSPECIFIED = 0,
    /* STORAGE_TYPE_MEMORY indicates in-memory storage that will be
 reloaded every time an app restarts. Tables with this type of storage
 will by default be ignored when importing and exporting a module's
 state from JSON. */
    cosmos_orm_v1alpha1_StorageType_STORAGE_TYPE_MEMORY = 1,
    /* STORAGE_TYPE_TRANSIENT indicates transient storage that is reset
 at the end of every block. Tables with this type of storage
 will by default be ignored when importing and exporting a module's
 state from JSON. */
    cosmos_orm_v1alpha1_StorageType_STORAGE_TYPE_TRANSIENT = 2
} cosmos_orm_v1alpha1_StorageType;

/* Struct definitions */
/* ModuleSchemaDescriptor describe's a module's ORM schema. */
typedef struct _cosmos_orm_v1alpha1_ModuleSchemaDescriptor {
    pb_callback_t schema_file;
    /* prefix is an optional prefix that precedes all keys in this module's
 store. */
    pb_callback_t prefix;
} cosmos_orm_v1alpha1_ModuleSchemaDescriptor;

/* FileEntry describes an ORM file used in a module. */
typedef struct _cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry {
    /* id is a prefix that will be varint encoded and prepended to all the
 table keys specified in the file's tables. */
    uint32_t id;
    /* proto_file_name is the name of a file .proto in that contains
 table definitions. The .proto file must be in a package that the
 module has referenced using cosmos.app.v1.ModuleDescriptor.use_package. */
    pb_callback_t proto_file_name;
    /* storage_type optionally indicates the type of storage this file's
 tables should used. If it is left unspecified, the default KV-storage
 of the app will be used. */
    cosmos_orm_v1alpha1_StorageType storage_type;
} cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry;

/* Extensions */
extern const pb_extension_type_t
    cosmos_orm_v1alpha1_module_schema; /* field type: cosmos_orm_v1alpha1_ModuleSchemaDescriptor module_schema; */

#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _cosmos_orm_v1alpha1_StorageType_MIN cosmos_orm_v1alpha1_StorageType_STORAGE_TYPE_DEFAULT_UNSPECIFIED
#define _cosmos_orm_v1alpha1_StorageType_MAX cosmos_orm_v1alpha1_StorageType_STORAGE_TYPE_TRANSIENT
#define _cosmos_orm_v1alpha1_StorageType_ARRAYSIZE \
    ((cosmos_orm_v1alpha1_StorageType)(cosmos_orm_v1alpha1_StorageType_STORAGE_TYPE_TRANSIENT + 1))

#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_storage_type_ENUMTYPE cosmos_orm_v1alpha1_StorageType

/* Initializer values for message structs */
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_init_default \
    {                                                           \
        {{NULL}, NULL}, { {NULL}, NULL }                        \
    }
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_init_default \
    { 0, {{NULL}, NULL}, _cosmos_orm_v1alpha1_StorageType_MIN }
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_init_zero \
    {                                                        \
        {{NULL}, NULL}, { {NULL}, NULL }                     \
    }
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_init_zero \
    { 0, {{NULL}, NULL}, _cosmos_orm_v1alpha1_StorageType_MIN }

/* Field tags (for use in manual encoding/decoding) */
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_schema_file_tag 1
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_prefix_tag 2
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_id_tag 1
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_proto_file_name_tag 2
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_storage_type_tag 3
#define cosmos_orm_v1alpha1_module_schema_tag 104503792

/* Struct field encoding specification for nanopb */
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FIELDLIST(X, a) \
    X(a, CALLBACK, REPEATED, MESSAGE, schema_file, 1)              \
    X(a, CALLBACK, SINGULAR, BYTES, prefix, 2)
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_CALLBACK pb_default_field_callback
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_DEFAULT NULL
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_schema_file_MSGTYPE cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry

#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_FIELDLIST(X, a) \
    X(a, STATIC, SINGULAR, UINT32, id, 1)                                    \
    X(a, CALLBACK, SINGULAR, STRING, proto_file_name, 2)                     \
    X(a, STATIC, SINGULAR, UENUM, storage_type, 3)
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_CALLBACK pb_default_field_callback
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_DEFAULT NULL

extern const pb_msgdesc_t cosmos_orm_v1alpha1_ModuleSchemaDescriptor_msg;
extern const pb_msgdesc_t cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_fields &cosmos_orm_v1alpha1_ModuleSchemaDescriptor_msg
#define cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_fields &cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_msg

/* Maximum encoded size of messages (where known) */
/* cosmos_orm_v1alpha1_ModuleSchemaDescriptor_size depends on runtime parameters */
/* cosmos_orm_v1alpha1_ModuleSchemaDescriptor_FileEntry_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
