/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_COSMOS_EVIDENCE_V1BETA1_COSMOS_EVIDENCE_V1BETA1_GENESIS_PB_H_INCLUDED
#define PB_COSMOS_EVIDENCE_V1BETA1_COSMOS_EVIDENCE_V1BETA1_GENESIS_PB_H_INCLUDED
#include <pb.h>

#include "google/protobuf/any.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* GenesisState defines the evidence module's genesis state. */
typedef struct _cosmos_evidence_v1beta1_GenesisState {
    /* evidence defines all the evidence at genesis. */
    pb_callback_t evidence;
} cosmos_evidence_v1beta1_GenesisState;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cosmos_evidence_v1beta1_GenesisState_init_default \
    {                                                     \
        { {NULL}, NULL }                                  \
    }
#define cosmos_evidence_v1beta1_GenesisState_init_zero \
    {                                                  \
        { {NULL}, NULL }                               \
    }

/* Field tags (for use in manual encoding/decoding) */
#define cosmos_evidence_v1beta1_GenesisState_evidence_tag 1

/* Struct field encoding specification for nanopb */
#define cosmos_evidence_v1beta1_GenesisState_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, evidence, 1)
#define cosmos_evidence_v1beta1_GenesisState_CALLBACK pb_default_field_callback
#define cosmos_evidence_v1beta1_GenesisState_DEFAULT NULL
#define cosmos_evidence_v1beta1_GenesisState_evidence_MSGTYPE google_protobuf_Any

extern const pb_msgdesc_t cosmos_evidence_v1beta1_GenesisState_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cosmos_evidence_v1beta1_GenesisState_fields &cosmos_evidence_v1beta1_GenesisState_msg

/* Maximum encoded size of messages (where known) */
/* cosmos_evidence_v1beta1_GenesisState_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
