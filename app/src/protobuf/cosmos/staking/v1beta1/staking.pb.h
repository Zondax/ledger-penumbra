/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_COSMOS_STAKING_V1BETA1_COSMOS_STAKING_V1BETA1_STAKING_PB_H_INCLUDED
#define PB_COSMOS_STAKING_V1BETA1_COSMOS_STAKING_V1BETA1_STAKING_PB_H_INCLUDED
#include <pb.h>

#include "amino/amino.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/any.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "tendermint/abci/types.pb.h"
#include "tendermint/types/types.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* BondStatus is the status of a validator. */
typedef enum _cosmos_staking_v1beta1_BondStatus {
    /* UNSPECIFIED defines an invalid validator status. */
    cosmos_staking_v1beta1_BondStatus_BOND_STATUS_UNSPECIFIED = 0,
    /* UNBONDED defines a validator that is not bonded. */
    cosmos_staking_v1beta1_BondStatus_BOND_STATUS_UNBONDED = 1,
    /* UNBONDING defines a validator that is unbonding. */
    cosmos_staking_v1beta1_BondStatus_BOND_STATUS_UNBONDING = 2,
    /* BONDED defines a validator that is bonded. */
    cosmos_staking_v1beta1_BondStatus_BOND_STATUS_BONDED = 3
} cosmos_staking_v1beta1_BondStatus;

/* Infraction indicates the infraction a validator commited. */
typedef enum _cosmos_staking_v1beta1_Infraction {
    /* UNSPECIFIED defines an empty infraction. */
    cosmos_staking_v1beta1_Infraction_INFRACTION_UNSPECIFIED = 0,
    /* DOUBLE_SIGN defines a validator that double-signs a block. */
    cosmos_staking_v1beta1_Infraction_INFRACTION_DOUBLE_SIGN = 1,
    /* DOWNTIME defines a validator that missed signing too many blocks. */
    cosmos_staking_v1beta1_Infraction_INFRACTION_DOWNTIME = 2
} cosmos_staking_v1beta1_Infraction;

/* Struct definitions */
/* HistoricalInfo contains header and validator information for a given block.
 It is stored as part of staking module's state, which persists the `n` most
 recent HistoricalInfo
 (`n` is set by the staking module's `historical_entries` parameter). */
typedef struct _cosmos_staking_v1beta1_HistoricalInfo {
    bool has_header;
    tendermint_types_Header header;
    pb_callback_t valset;
} cosmos_staking_v1beta1_HistoricalInfo;

/* CommissionRates defines the initial commission rates to be used for creating
 a validator. */
typedef struct _cosmos_staking_v1beta1_CommissionRates {
    /* rate is the commission rate charged to delegators, as a fraction. */
    pb_callback_t rate;
    /* max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
    pb_callback_t max_rate;
    /* max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
    pb_callback_t max_change_rate;
} cosmos_staking_v1beta1_CommissionRates;

/* Commission defines commission parameters for a given validator. */
typedef struct _cosmos_staking_v1beta1_Commission {
    /* commission_rates defines the initial commission rates to be used for creating a validator. */
    bool has_commission_rates;
    cosmos_staking_v1beta1_CommissionRates commission_rates;
    /* update_time is the last time the commission rate was changed. */
    bool has_update_time;
    google_protobuf_Timestamp update_time;
} cosmos_staking_v1beta1_Commission;

/* Description defines a validator description. */
typedef struct _cosmos_staking_v1beta1_Description {
    /* moniker defines a human-readable name for the validator. */
    pb_callback_t moniker;
    /* identity defines an optional identity signature (ex. UPort or Keybase). */
    pb_callback_t identity;
    /* website defines an optional website link. */
    pb_callback_t website;
    /* security_contact defines an optional email for security contact. */
    pb_callback_t security_contact;
    /* details define other optional details. */
    pb_callback_t details;
} cosmos_staking_v1beta1_Description;

/* Validator defines a validator, together with the total amount of the
 Validator's bond shares and their exchange rate to coins. Slashing results in
 a decrease in the exchange rate, allowing correct calculation of future
 undelegations without iterating over delegators. When coins are delegated to
 this validator, the validator is credited with a delegation whose number of
 bond shares is based on the amount of coins delegated divided by the current
 exchange rate. Voting power can be calculated as total bonded shares
 multiplied by exchange rate. */
typedef struct _cosmos_staking_v1beta1_Validator {
    /* operator_address defines the address of the validator's operator; bech encoded in JSON. */
    pb_callback_t operator_address;
    /* consensus_pubkey is the consensus public key of the validator, as a Protobuf Any. */
    bool has_consensus_pubkey;
    google_protobuf_Any consensus_pubkey;
    /* jailed defined whether the validator has been jailed from bonded status or not. */
    bool jailed;
    /* status is the validator status (bonded/unbonding/unbonded). */
    cosmos_staking_v1beta1_BondStatus status;
    /* tokens define the delegated tokens (incl. self-delegation). */
    pb_callback_t tokens;
    /* delegator_shares defines total shares issued to a validator's delegators. */
    pb_callback_t delegator_shares;
    /* description defines the description terms for the validator. */
    bool has_description;
    cosmos_staking_v1beta1_Description description;
    /* unbonding_height defines, if unbonding, the height at which this validator has begun unbonding. */
    int64_t unbonding_height;
    /* unbonding_time defines, if unbonding, the min time for the validator to complete unbonding. */
    bool has_unbonding_time;
    google_protobuf_Timestamp unbonding_time;
    /* commission defines the commission parameters. */
    bool has_commission;
    cosmos_staking_v1beta1_Commission commission;
    /* min_self_delegation is the validator's self declared minimum self delegation.

 Since: cosmos-sdk 0.46 */
    pb_callback_t min_self_delegation;
    /* strictly positive if this validator's unbonding has been stopped by external modules */
    int64_t unbonding_on_hold_ref_count;
    /* list of unbonding ids, each uniquely identifing an unbonding of this validator */
    pb_callback_t unbonding_ids;
} cosmos_staking_v1beta1_Validator;

/* ValAddresses defines a repeated set of validator addresses. */
typedef struct _cosmos_staking_v1beta1_ValAddresses {
    pb_callback_t addresses;
} cosmos_staking_v1beta1_ValAddresses;

/* DVPair is struct that just has a delegator-validator pair with no other data.
 It is intended to be used as a marshalable pointer. For example, a DVPair can
 be used to construct the key to getting an UnbondingDelegation from state. */
typedef struct _cosmos_staking_v1beta1_DVPair {
    pb_callback_t delegator_address;
    pb_callback_t validator_address;
} cosmos_staking_v1beta1_DVPair;

/* DVPairs defines an array of DVPair objects. */
typedef struct _cosmos_staking_v1beta1_DVPairs {
    pb_callback_t pairs;
} cosmos_staking_v1beta1_DVPairs;

/* DVVTriplet is struct that just has a delegator-validator-validator triplet
 with no other data. It is intended to be used as a marshalable pointer. For
 example, a DVVTriplet can be used to construct the key to getting a
 Redelegation from state. */
typedef struct _cosmos_staking_v1beta1_DVVTriplet {
    pb_callback_t delegator_address;
    pb_callback_t validator_src_address;
    pb_callback_t validator_dst_address;
} cosmos_staking_v1beta1_DVVTriplet;

/* DVVTriplets defines an array of DVVTriplet objects. */
typedef struct _cosmos_staking_v1beta1_DVVTriplets {
    pb_callback_t triplets;
} cosmos_staking_v1beta1_DVVTriplets;

/* Delegation represents the bond with tokens held by an account. It is
 owned by one delegator, and is associated with the voting power of one
 validator. */
typedef struct _cosmos_staking_v1beta1_Delegation {
    /* delegator_address is the bech32-encoded address of the delegator. */
    pb_callback_t delegator_address;
    /* validator_address is the bech32-encoded address of the validator. */
    pb_callback_t validator_address;
    /* shares define the delegation shares received. */
    pb_callback_t shares;
} cosmos_staking_v1beta1_Delegation;

/* UnbondingDelegation stores all of a single delegator's unbonding bonds
 for a single validator in an time-ordered list. */
typedef struct _cosmos_staking_v1beta1_UnbondingDelegation {
    /* delegator_address is the bech32-encoded address of the delegator. */
    pb_callback_t delegator_address;
    /* validator_address is the bech32-encoded address of the validator. */
    pb_callback_t validator_address;
    /* entries are the unbonding delegation entries. */
    pb_callback_t entries; /* unbonding delegation entries */
} cosmos_staking_v1beta1_UnbondingDelegation;

/* UnbondingDelegationEntry defines an unbonding object with relevant metadata. */
typedef struct _cosmos_staking_v1beta1_UnbondingDelegationEntry {
    /* creation_height is the height which the unbonding took place. */
    int64_t creation_height;
    /* completion_time is the unix time for unbonding completion. */
    bool has_completion_time;
    google_protobuf_Timestamp completion_time;
    /* initial_balance defines the tokens initially scheduled to receive at completion. */
    pb_callback_t initial_balance;
    /* balance defines the tokens to receive at completion. */
    pb_callback_t balance;
    /* Incrementing id that uniquely identifies this entry */
    uint64_t unbonding_id;
    /* Strictly positive if this entry's unbonding has been stopped by external modules */
    int64_t unbonding_on_hold_ref_count;
} cosmos_staking_v1beta1_UnbondingDelegationEntry;

/* RedelegationEntry defines a redelegation object with relevant metadata. */
typedef struct _cosmos_staking_v1beta1_RedelegationEntry {
    /* creation_height  defines the height which the redelegation took place. */
    int64_t creation_height;
    /* completion_time defines the unix time for redelegation completion. */
    bool has_completion_time;
    google_protobuf_Timestamp completion_time;
    /* initial_balance defines the initial balance when redelegation started. */
    pb_callback_t initial_balance;
    /* shares_dst is the amount of destination-validator shares created by redelegation. */
    pb_callback_t shares_dst;
    /* Incrementing id that uniquely identifies this entry */
    uint64_t unbonding_id;
    /* Strictly positive if this entry's unbonding has been stopped by external modules */
    int64_t unbonding_on_hold_ref_count;
} cosmos_staking_v1beta1_RedelegationEntry;

/* Redelegation contains the list of a particular delegator's redelegating bonds
 from a particular source validator to a particular destination validator. */
typedef struct _cosmos_staking_v1beta1_Redelegation {
    /* delegator_address is the bech32-encoded address of the delegator. */
    pb_callback_t delegator_address;
    /* validator_src_address is the validator redelegation source operator address. */
    pb_callback_t validator_src_address;
    /* validator_dst_address is the validator redelegation destination operator address. */
    pb_callback_t validator_dst_address;
    /* entries are the redelegation entries. */
    pb_callback_t entries; /* redelegation entries */
} cosmos_staking_v1beta1_Redelegation;

/* Params defines the parameters for the x/staking module. */
typedef struct _cosmos_staking_v1beta1_Params {
    /* unbonding_time is the time duration of unbonding. */
    bool has_unbonding_time;
    google_protobuf_Duration unbonding_time;
    /* max_validators is the maximum number of validators. */
    uint32_t max_validators;
    /* max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio). */
    uint32_t max_entries;
    /* historical_entries is the number of historical entries to persist. */
    uint32_t historical_entries;
    /* bond_denom defines the bondable coin denomination. */
    pb_callback_t bond_denom;
    /* min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators */
    pb_callback_t min_commission_rate;
} cosmos_staking_v1beta1_Params;

/* DelegationResponse is equivalent to Delegation except that it contains a
 balance in addition to shares which is more suitable for client responses. */
typedef struct _cosmos_staking_v1beta1_DelegationResponse {
    bool has_delegation;
    cosmos_staking_v1beta1_Delegation delegation;
    bool has_balance;
    cosmos_base_v1beta1_Coin balance;
} cosmos_staking_v1beta1_DelegationResponse;

/* RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
 contains a balance in addition to shares which is more suitable for client
 responses. */
typedef struct _cosmos_staking_v1beta1_RedelegationEntryResponse {
    bool has_redelegation_entry;
    cosmos_staking_v1beta1_RedelegationEntry redelegation_entry;
    pb_callback_t balance;
} cosmos_staking_v1beta1_RedelegationEntryResponse;

/* RedelegationResponse is equivalent to a Redelegation except that its entries
 contain a balance in addition to shares which is more suitable for client
 responses. */
typedef struct _cosmos_staking_v1beta1_RedelegationResponse {
    bool has_redelegation;
    cosmos_staking_v1beta1_Redelegation redelegation;
    pb_callback_t entries;
} cosmos_staking_v1beta1_RedelegationResponse;

/* Pool is used for tracking bonded and not-bonded token supply of the bond
 denomination. */
typedef struct _cosmos_staking_v1beta1_Pool {
    pb_callback_t not_bonded_tokens;
    pb_callback_t bonded_tokens;
} cosmos_staking_v1beta1_Pool;

/* ValidatorUpdates defines an array of abci.ValidatorUpdate objects.
 TODO: explore moving this to proto/cosmos/base to separate modules from tendermint dependence */
typedef struct _cosmos_staking_v1beta1_ValidatorUpdates {
    pb_callback_t updates;
} cosmos_staking_v1beta1_ValidatorUpdates;

#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _cosmos_staking_v1beta1_BondStatus_MIN cosmos_staking_v1beta1_BondStatus_BOND_STATUS_UNSPECIFIED
#define _cosmos_staking_v1beta1_BondStatus_MAX cosmos_staking_v1beta1_BondStatus_BOND_STATUS_BONDED
#define _cosmos_staking_v1beta1_BondStatus_ARRAYSIZE \
    ((cosmos_staking_v1beta1_BondStatus)(cosmos_staking_v1beta1_BondStatus_BOND_STATUS_BONDED + 1))

#define _cosmos_staking_v1beta1_Infraction_MIN cosmos_staking_v1beta1_Infraction_INFRACTION_UNSPECIFIED
#define _cosmos_staking_v1beta1_Infraction_MAX cosmos_staking_v1beta1_Infraction_INFRACTION_DOWNTIME
#define _cosmos_staking_v1beta1_Infraction_ARRAYSIZE \
    ((cosmos_staking_v1beta1_Infraction)(cosmos_staking_v1beta1_Infraction_INFRACTION_DOWNTIME + 1))

#define cosmos_staking_v1beta1_Validator_status_ENUMTYPE cosmos_staking_v1beta1_BondStatus

/* Initializer values for message structs */
#define cosmos_staking_v1beta1_HistoricalInfo_init_default            \
    {                                                                 \
        false, tendermint_types_Header_init_default, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_CommissionRates_init_default \
    {                                                       \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL }    \
    }
#define cosmos_staking_v1beta1_Commission_init_default \
    { false, cosmos_staking_v1beta1_CommissionRates_init_default, false, google_protobuf_Timestamp_init_default }
#define cosmos_staking_v1beta1_Description_init_default                                  \
    {                                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_Validator_init_default                                                                       \
    {                                                                                                                       \
        {{NULL}, NULL}, false, google_protobuf_Any_init_default, 0, _cosmos_staking_v1beta1_BondStatus_MIN, {{NULL}, NULL}, \
            {{NULL}, NULL}, false, cosmos_staking_v1beta1_Description_init_default, 0, false,                               \
            google_protobuf_Timestamp_init_default, false, cosmos_staking_v1beta1_Commission_init_default, {{NULL}, NULL},  \
            0, {                                                                                                            \
            {NULL}, NULL                                                                                                    \
        }                                                                                                                   \
    }
#define cosmos_staking_v1beta1_ValAddresses_init_default \
    {                                                    \
        { {NULL}, NULL }                                 \
    }
#define cosmos_staking_v1beta1_DVPair_init_default \
    {                                              \
        {{NULL}, NULL}, { {NULL}, NULL }           \
    }
#define cosmos_staking_v1beta1_DVPairs_init_default \
    {                                               \
        { {NULL}, NULL }                            \
    }
#define cosmos_staking_v1beta1_DVVTriplet_init_default   \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_DVVTriplets_init_default \
    {                                                   \
        { {NULL}, NULL }                                \
    }
#define cosmos_staking_v1beta1_Delegation_init_default   \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_UnbondingDelegation_init_default \
    {                                                           \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL }        \
    }
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_init_default \
    { 0, false, google_protobuf_Timestamp_init_default, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0 }
#define cosmos_staking_v1beta1_RedelegationEntry_init_default \
    { 0, false, google_protobuf_Timestamp_init_default, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0 }
#define cosmos_staking_v1beta1_Redelegation_init_default                 \
    {                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_Params_init_default                                              \
    {                                                                                           \
        false, google_protobuf_Duration_init_default, 0, 0, 0, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_DelegationResponse_init_default \
    { false, cosmos_staking_v1beta1_Delegation_init_default, false, cosmos_base_v1beta1_Coin_init_default }
#define cosmos_staking_v1beta1_RedelegationEntryResponse_init_default                  \
    {                                                                                  \
        false, cosmos_staking_v1beta1_RedelegationEntry_init_default, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_RedelegationResponse_init_default                  \
    {                                                                             \
        false, cosmos_staking_v1beta1_Redelegation_init_default, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_Pool_init_default \
    {                                            \
        {{NULL}, NULL}, { {NULL}, NULL }         \
    }
#define cosmos_staking_v1beta1_ValidatorUpdates_init_default \
    {                                                        \
        { {NULL}, NULL }                                     \
    }
#define cosmos_staking_v1beta1_HistoricalInfo_init_zero            \
    {                                                              \
        false, tendermint_types_Header_init_zero, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_CommissionRates_init_zero \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_Commission_init_zero \
    { false, cosmos_staking_v1beta1_CommissionRates_init_zero, false, google_protobuf_Timestamp_init_zero }
#define cosmos_staking_v1beta1_Description_init_zero                                     \
    {                                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_Validator_init_zero                                                                        \
    {                                                                                                                     \
        {{NULL}, NULL}, false, google_protobuf_Any_init_zero, 0, _cosmos_staking_v1beta1_BondStatus_MIN, {{NULL}, NULL},  \
            {{NULL}, NULL}, false, cosmos_staking_v1beta1_Description_init_zero, 0, false,                                \
            google_protobuf_Timestamp_init_zero, false, cosmos_staking_v1beta1_Commission_init_zero, {{NULL}, NULL}, 0, { \
            {NULL}, NULL                                                                                                  \
        }                                                                                                                 \
    }
#define cosmos_staking_v1beta1_ValAddresses_init_zero \
    {                                                 \
        { {NULL}, NULL }                              \
    }
#define cosmos_staking_v1beta1_DVPair_init_zero \
    {                                           \
        {{NULL}, NULL}, { {NULL}, NULL }        \
    }
#define cosmos_staking_v1beta1_DVPairs_init_zero \
    {                                            \
        { {NULL}, NULL }                         \
    }
#define cosmos_staking_v1beta1_DVVTriplet_init_zero      \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_DVVTriplets_init_zero \
    {                                                \
        { {NULL}, NULL }                             \
    }
#define cosmos_staking_v1beta1_Delegation_init_zero      \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_UnbondingDelegation_init_zero \
    {                                                        \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL }     \
    }
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_init_zero \
    { 0, false, google_protobuf_Timestamp_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0 }
#define cosmos_staking_v1beta1_RedelegationEntry_init_zero \
    { 0, false, google_protobuf_Timestamp_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0 }
#define cosmos_staking_v1beta1_Redelegation_init_zero                    \
    {                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_Params_init_zero                                              \
    {                                                                                        \
        false, google_protobuf_Duration_init_zero, 0, 0, 0, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_DelegationResponse_init_zero \
    { false, cosmos_staking_v1beta1_Delegation_init_zero, false, cosmos_base_v1beta1_Coin_init_zero }
#define cosmos_staking_v1beta1_RedelegationEntryResponse_init_zero                  \
    {                                                                               \
        false, cosmos_staking_v1beta1_RedelegationEntry_init_zero, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_RedelegationResponse_init_zero                  \
    {                                                                          \
        false, cosmos_staking_v1beta1_Redelegation_init_zero, { {NULL}, NULL } \
    }
#define cosmos_staking_v1beta1_Pool_init_zero \
    {                                         \
        {{NULL}, NULL}, { {NULL}, NULL }      \
    }
#define cosmos_staking_v1beta1_ValidatorUpdates_init_zero \
    {                                                     \
        { {NULL}, NULL }                                  \
    }

/* Field tags (for use in manual encoding/decoding) */
#define cosmos_staking_v1beta1_HistoricalInfo_header_tag 1
#define cosmos_staking_v1beta1_HistoricalInfo_valset_tag 2
#define cosmos_staking_v1beta1_CommissionRates_rate_tag 1
#define cosmos_staking_v1beta1_CommissionRates_max_rate_tag 2
#define cosmos_staking_v1beta1_CommissionRates_max_change_rate_tag 3
#define cosmos_staking_v1beta1_Commission_commission_rates_tag 1
#define cosmos_staking_v1beta1_Commission_update_time_tag 2
#define cosmos_staking_v1beta1_Description_moniker_tag 1
#define cosmos_staking_v1beta1_Description_identity_tag 2
#define cosmos_staking_v1beta1_Description_website_tag 3
#define cosmos_staking_v1beta1_Description_security_contact_tag 4
#define cosmos_staking_v1beta1_Description_details_tag 5
#define cosmos_staking_v1beta1_Validator_operator_address_tag 1
#define cosmos_staking_v1beta1_Validator_consensus_pubkey_tag 2
#define cosmos_staking_v1beta1_Validator_jailed_tag 3
#define cosmos_staking_v1beta1_Validator_status_tag 4
#define cosmos_staking_v1beta1_Validator_tokens_tag 5
#define cosmos_staking_v1beta1_Validator_delegator_shares_tag 6
#define cosmos_staking_v1beta1_Validator_description_tag 7
#define cosmos_staking_v1beta1_Validator_unbonding_height_tag 8
#define cosmos_staking_v1beta1_Validator_unbonding_time_tag 9
#define cosmos_staking_v1beta1_Validator_commission_tag 10
#define cosmos_staking_v1beta1_Validator_min_self_delegation_tag 11
#define cosmos_staking_v1beta1_Validator_unbonding_on_hold_ref_count_tag 12
#define cosmos_staking_v1beta1_Validator_unbonding_ids_tag 13
#define cosmos_staking_v1beta1_ValAddresses_addresses_tag 1
#define cosmos_staking_v1beta1_DVPair_delegator_address_tag 1
#define cosmos_staking_v1beta1_DVPair_validator_address_tag 2
#define cosmos_staking_v1beta1_DVPairs_pairs_tag 1
#define cosmos_staking_v1beta1_DVVTriplet_delegator_address_tag 1
#define cosmos_staking_v1beta1_DVVTriplet_validator_src_address_tag 2
#define cosmos_staking_v1beta1_DVVTriplet_validator_dst_address_tag 3
#define cosmos_staking_v1beta1_DVVTriplets_triplets_tag 1
#define cosmos_staking_v1beta1_Delegation_delegator_address_tag 1
#define cosmos_staking_v1beta1_Delegation_validator_address_tag 2
#define cosmos_staking_v1beta1_Delegation_shares_tag 3
#define cosmos_staking_v1beta1_UnbondingDelegation_delegator_address_tag 1
#define cosmos_staking_v1beta1_UnbondingDelegation_validator_address_tag 2
#define cosmos_staking_v1beta1_UnbondingDelegation_entries_tag 3
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_creation_height_tag 1
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_completion_time_tag 2
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_initial_balance_tag 3
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_balance_tag 4
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_unbonding_id_tag 5
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_unbonding_on_hold_ref_count_tag 6
#define cosmos_staking_v1beta1_RedelegationEntry_creation_height_tag 1
#define cosmos_staking_v1beta1_RedelegationEntry_completion_time_tag 2
#define cosmos_staking_v1beta1_RedelegationEntry_initial_balance_tag 3
#define cosmos_staking_v1beta1_RedelegationEntry_shares_dst_tag 4
#define cosmos_staking_v1beta1_RedelegationEntry_unbonding_id_tag 5
#define cosmos_staking_v1beta1_RedelegationEntry_unbonding_on_hold_ref_count_tag 6
#define cosmos_staking_v1beta1_Redelegation_delegator_address_tag 1
#define cosmos_staking_v1beta1_Redelegation_validator_src_address_tag 2
#define cosmos_staking_v1beta1_Redelegation_validator_dst_address_tag 3
#define cosmos_staking_v1beta1_Redelegation_entries_tag 4
#define cosmos_staking_v1beta1_Params_unbonding_time_tag 1
#define cosmos_staking_v1beta1_Params_max_validators_tag 2
#define cosmos_staking_v1beta1_Params_max_entries_tag 3
#define cosmos_staking_v1beta1_Params_historical_entries_tag 4
#define cosmos_staking_v1beta1_Params_bond_denom_tag 5
#define cosmos_staking_v1beta1_Params_min_commission_rate_tag 6
#define cosmos_staking_v1beta1_DelegationResponse_delegation_tag 1
#define cosmos_staking_v1beta1_DelegationResponse_balance_tag 2
#define cosmos_staking_v1beta1_RedelegationEntryResponse_redelegation_entry_tag 1
#define cosmos_staking_v1beta1_RedelegationEntryResponse_balance_tag 4
#define cosmos_staking_v1beta1_RedelegationResponse_redelegation_tag 1
#define cosmos_staking_v1beta1_RedelegationResponse_entries_tag 2
#define cosmos_staking_v1beta1_Pool_not_bonded_tokens_tag 1
#define cosmos_staking_v1beta1_Pool_bonded_tokens_tag 2
#define cosmos_staking_v1beta1_ValidatorUpdates_updates_tag 1

/* Struct field encoding specification for nanopb */
#define cosmos_staking_v1beta1_HistoricalInfo_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, header, 1)                \
    X(a, CALLBACK, REPEATED, MESSAGE, valset, 2)
#define cosmos_staking_v1beta1_HistoricalInfo_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_HistoricalInfo_DEFAULT NULL
#define cosmos_staking_v1beta1_HistoricalInfo_header_MSGTYPE tendermint_types_Header
#define cosmos_staking_v1beta1_HistoricalInfo_valset_MSGTYPE cosmos_staking_v1beta1_Validator

#define cosmos_staking_v1beta1_CommissionRates_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, rate, 1)                  \
    X(a, CALLBACK, SINGULAR, STRING, max_rate, 2)              \
    X(a, CALLBACK, SINGULAR, STRING, max_change_rate, 3)
#define cosmos_staking_v1beta1_CommissionRates_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_CommissionRates_DEFAULT NULL

#define cosmos_staking_v1beta1_Commission_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, commission_rates, 1)  \
    X(a, STATIC, OPTIONAL, MESSAGE, update_time, 2)
#define cosmos_staking_v1beta1_Commission_CALLBACK NULL
#define cosmos_staking_v1beta1_Commission_DEFAULT NULL
#define cosmos_staking_v1beta1_Commission_commission_rates_MSGTYPE cosmos_staking_v1beta1_CommissionRates
#define cosmos_staking_v1beta1_Commission_update_time_MSGTYPE google_protobuf_Timestamp

#define cosmos_staking_v1beta1_Description_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, moniker, 1)           \
    X(a, CALLBACK, SINGULAR, STRING, identity, 2)          \
    X(a, CALLBACK, SINGULAR, STRING, website, 3)           \
    X(a, CALLBACK, SINGULAR, STRING, security_contact, 4)  \
    X(a, CALLBACK, SINGULAR, STRING, details, 5)
#define cosmos_staking_v1beta1_Description_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_Description_DEFAULT NULL

#define cosmos_staking_v1beta1_Validator_FIELDLIST(X, a)           \
    X(a, CALLBACK, SINGULAR, STRING, operator_address, 1)          \
    X(a, STATIC, OPTIONAL, MESSAGE, consensus_pubkey, 2)           \
    X(a, STATIC, SINGULAR, BOOL, jailed, 3)                        \
    X(a, STATIC, SINGULAR, UENUM, status, 4)                       \
    X(a, CALLBACK, SINGULAR, STRING, tokens, 5)                    \
    X(a, CALLBACK, SINGULAR, STRING, delegator_shares, 6)          \
    X(a, STATIC, OPTIONAL, MESSAGE, description, 7)                \
    X(a, STATIC, SINGULAR, INT64, unbonding_height, 8)             \
    X(a, STATIC, OPTIONAL, MESSAGE, unbonding_time, 9)             \
    X(a, STATIC, OPTIONAL, MESSAGE, commission, 10)                \
    X(a, CALLBACK, SINGULAR, STRING, min_self_delegation, 11)      \
    X(a, STATIC, SINGULAR, INT64, unbonding_on_hold_ref_count, 12) \
    X(a, CALLBACK, REPEATED, UINT64, unbonding_ids, 13)
#define cosmos_staking_v1beta1_Validator_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_Validator_DEFAULT NULL
#define cosmos_staking_v1beta1_Validator_consensus_pubkey_MSGTYPE google_protobuf_Any
#define cosmos_staking_v1beta1_Validator_description_MSGTYPE cosmos_staking_v1beta1_Description
#define cosmos_staking_v1beta1_Validator_unbonding_time_MSGTYPE google_protobuf_Timestamp
#define cosmos_staking_v1beta1_Validator_commission_MSGTYPE cosmos_staking_v1beta1_Commission

#define cosmos_staking_v1beta1_ValAddresses_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, STRING, addresses, 1)
#define cosmos_staking_v1beta1_ValAddresses_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_ValAddresses_DEFAULT NULL

#define cosmos_staking_v1beta1_DVPair_FIELDLIST(X, a)      \
    X(a, CALLBACK, SINGULAR, STRING, delegator_address, 1) \
    X(a, CALLBACK, SINGULAR, STRING, validator_address, 2)
#define cosmos_staking_v1beta1_DVPair_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_DVPair_DEFAULT NULL

#define cosmos_staking_v1beta1_DVPairs_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, pairs, 1)
#define cosmos_staking_v1beta1_DVPairs_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_DVPairs_DEFAULT NULL
#define cosmos_staking_v1beta1_DVPairs_pairs_MSGTYPE cosmos_staking_v1beta1_DVPair

#define cosmos_staking_v1beta1_DVVTriplet_FIELDLIST(X, a)      \
    X(a, CALLBACK, SINGULAR, STRING, delegator_address, 1)     \
    X(a, CALLBACK, SINGULAR, STRING, validator_src_address, 2) \
    X(a, CALLBACK, SINGULAR, STRING, validator_dst_address, 3)
#define cosmos_staking_v1beta1_DVVTriplet_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_DVVTriplet_DEFAULT NULL

#define cosmos_staking_v1beta1_DVVTriplets_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, triplets, 1)
#define cosmos_staking_v1beta1_DVVTriplets_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_DVVTriplets_DEFAULT NULL
#define cosmos_staking_v1beta1_DVVTriplets_triplets_MSGTYPE cosmos_staking_v1beta1_DVVTriplet

#define cosmos_staking_v1beta1_Delegation_FIELDLIST(X, a)  \
    X(a, CALLBACK, SINGULAR, STRING, delegator_address, 1) \
    X(a, CALLBACK, SINGULAR, STRING, validator_address, 2) \
    X(a, CALLBACK, SINGULAR, STRING, shares, 3)
#define cosmos_staking_v1beta1_Delegation_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_Delegation_DEFAULT NULL

#define cosmos_staking_v1beta1_UnbondingDelegation_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, delegator_address, 1)         \
    X(a, CALLBACK, SINGULAR, STRING, validator_address, 2)         \
    X(a, CALLBACK, REPEATED, MESSAGE, entries, 3)
#define cosmos_staking_v1beta1_UnbondingDelegation_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_UnbondingDelegation_DEFAULT NULL
#define cosmos_staking_v1beta1_UnbondingDelegation_entries_MSGTYPE cosmos_staking_v1beta1_UnbondingDelegationEntry

#define cosmos_staking_v1beta1_UnbondingDelegationEntry_FIELDLIST(X, a) \
    X(a, STATIC, SINGULAR, INT64, creation_height, 1)                   \
    X(a, STATIC, OPTIONAL, MESSAGE, completion_time, 2)                 \
    X(a, CALLBACK, SINGULAR, STRING, initial_balance, 3)                \
    X(a, CALLBACK, SINGULAR, STRING, balance, 4)                        \
    X(a, STATIC, SINGULAR, UINT64, unbonding_id, 5)                     \
    X(a, STATIC, SINGULAR, INT64, unbonding_on_hold_ref_count, 6)
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_DEFAULT NULL
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_completion_time_MSGTYPE google_protobuf_Timestamp

#define cosmos_staking_v1beta1_RedelegationEntry_FIELDLIST(X, a) \
    X(a, STATIC, SINGULAR, INT64, creation_height, 1)            \
    X(a, STATIC, OPTIONAL, MESSAGE, completion_time, 2)          \
    X(a, CALLBACK, SINGULAR, STRING, initial_balance, 3)         \
    X(a, CALLBACK, SINGULAR, STRING, shares_dst, 4)              \
    X(a, STATIC, SINGULAR, UINT64, unbonding_id, 5)              \
    X(a, STATIC, SINGULAR, INT64, unbonding_on_hold_ref_count, 6)
#define cosmos_staking_v1beta1_RedelegationEntry_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_RedelegationEntry_DEFAULT NULL
#define cosmos_staking_v1beta1_RedelegationEntry_completion_time_MSGTYPE google_protobuf_Timestamp

#define cosmos_staking_v1beta1_Redelegation_FIELDLIST(X, a)    \
    X(a, CALLBACK, SINGULAR, STRING, delegator_address, 1)     \
    X(a, CALLBACK, SINGULAR, STRING, validator_src_address, 2) \
    X(a, CALLBACK, SINGULAR, STRING, validator_dst_address, 3) \
    X(a, CALLBACK, REPEATED, MESSAGE, entries, 4)
#define cosmos_staking_v1beta1_Redelegation_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_Redelegation_DEFAULT NULL
#define cosmos_staking_v1beta1_Redelegation_entries_MSGTYPE cosmos_staking_v1beta1_RedelegationEntry

#define cosmos_staking_v1beta1_Params_FIELDLIST(X, a)     \
    X(a, STATIC, OPTIONAL, MESSAGE, unbonding_time, 1)    \
    X(a, STATIC, SINGULAR, UINT32, max_validators, 2)     \
    X(a, STATIC, SINGULAR, UINT32, max_entries, 3)        \
    X(a, STATIC, SINGULAR, UINT32, historical_entries, 4) \
    X(a, CALLBACK, SINGULAR, STRING, bond_denom, 5)       \
    X(a, CALLBACK, SINGULAR, STRING, min_commission_rate, 6)
#define cosmos_staking_v1beta1_Params_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_Params_DEFAULT NULL
#define cosmos_staking_v1beta1_Params_unbonding_time_MSGTYPE google_protobuf_Duration

#define cosmos_staking_v1beta1_DelegationResponse_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, delegation, 1)                \
    X(a, STATIC, OPTIONAL, MESSAGE, balance, 2)
#define cosmos_staking_v1beta1_DelegationResponse_CALLBACK NULL
#define cosmos_staking_v1beta1_DelegationResponse_DEFAULT NULL
#define cosmos_staking_v1beta1_DelegationResponse_delegation_MSGTYPE cosmos_staking_v1beta1_Delegation
#define cosmos_staking_v1beta1_DelegationResponse_balance_MSGTYPE cosmos_base_v1beta1_Coin

#define cosmos_staking_v1beta1_RedelegationEntryResponse_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, redelegation_entry, 1)               \
    X(a, CALLBACK, SINGULAR, STRING, balance, 4)
#define cosmos_staking_v1beta1_RedelegationEntryResponse_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_RedelegationEntryResponse_DEFAULT NULL
#define cosmos_staking_v1beta1_RedelegationEntryResponse_redelegation_entry_MSGTYPE cosmos_staking_v1beta1_RedelegationEntry

#define cosmos_staking_v1beta1_RedelegationResponse_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, redelegation, 1)                \
    X(a, CALLBACK, REPEATED, MESSAGE, entries, 2)
#define cosmos_staking_v1beta1_RedelegationResponse_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_RedelegationResponse_DEFAULT NULL
#define cosmos_staking_v1beta1_RedelegationResponse_redelegation_MSGTYPE cosmos_staking_v1beta1_Redelegation
#define cosmos_staking_v1beta1_RedelegationResponse_entries_MSGTYPE cosmos_staking_v1beta1_RedelegationEntryResponse

#define cosmos_staking_v1beta1_Pool_FIELDLIST(X, a)        \
    X(a, CALLBACK, SINGULAR, STRING, not_bonded_tokens, 1) \
    X(a, CALLBACK, SINGULAR, STRING, bonded_tokens, 2)
#define cosmos_staking_v1beta1_Pool_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_Pool_DEFAULT NULL

#define cosmos_staking_v1beta1_ValidatorUpdates_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, updates, 1)
#define cosmos_staking_v1beta1_ValidatorUpdates_CALLBACK pb_default_field_callback
#define cosmos_staking_v1beta1_ValidatorUpdates_DEFAULT NULL
#define cosmos_staking_v1beta1_ValidatorUpdates_updates_MSGTYPE tendermint_abci_ValidatorUpdate

extern const pb_msgdesc_t cosmos_staking_v1beta1_HistoricalInfo_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_CommissionRates_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_Commission_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_Description_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_Validator_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_ValAddresses_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_DVPair_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_DVPairs_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_DVVTriplet_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_DVVTriplets_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_Delegation_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_UnbondingDelegation_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_UnbondingDelegationEntry_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_RedelegationEntry_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_Redelegation_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_Params_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_DelegationResponse_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_RedelegationEntryResponse_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_RedelegationResponse_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_Pool_msg;
extern const pb_msgdesc_t cosmos_staking_v1beta1_ValidatorUpdates_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cosmos_staking_v1beta1_HistoricalInfo_fields &cosmos_staking_v1beta1_HistoricalInfo_msg
#define cosmos_staking_v1beta1_CommissionRates_fields &cosmos_staking_v1beta1_CommissionRates_msg
#define cosmos_staking_v1beta1_Commission_fields &cosmos_staking_v1beta1_Commission_msg
#define cosmos_staking_v1beta1_Description_fields &cosmos_staking_v1beta1_Description_msg
#define cosmos_staking_v1beta1_Validator_fields &cosmos_staking_v1beta1_Validator_msg
#define cosmos_staking_v1beta1_ValAddresses_fields &cosmos_staking_v1beta1_ValAddresses_msg
#define cosmos_staking_v1beta1_DVPair_fields &cosmos_staking_v1beta1_DVPair_msg
#define cosmos_staking_v1beta1_DVPairs_fields &cosmos_staking_v1beta1_DVPairs_msg
#define cosmos_staking_v1beta1_DVVTriplet_fields &cosmos_staking_v1beta1_DVVTriplet_msg
#define cosmos_staking_v1beta1_DVVTriplets_fields &cosmos_staking_v1beta1_DVVTriplets_msg
#define cosmos_staking_v1beta1_Delegation_fields &cosmos_staking_v1beta1_Delegation_msg
#define cosmos_staking_v1beta1_UnbondingDelegation_fields &cosmos_staking_v1beta1_UnbondingDelegation_msg
#define cosmos_staking_v1beta1_UnbondingDelegationEntry_fields &cosmos_staking_v1beta1_UnbondingDelegationEntry_msg
#define cosmos_staking_v1beta1_RedelegationEntry_fields &cosmos_staking_v1beta1_RedelegationEntry_msg
#define cosmos_staking_v1beta1_Redelegation_fields &cosmos_staking_v1beta1_Redelegation_msg
#define cosmos_staking_v1beta1_Params_fields &cosmos_staking_v1beta1_Params_msg
#define cosmos_staking_v1beta1_DelegationResponse_fields &cosmos_staking_v1beta1_DelegationResponse_msg
#define cosmos_staking_v1beta1_RedelegationEntryResponse_fields &cosmos_staking_v1beta1_RedelegationEntryResponse_msg
#define cosmos_staking_v1beta1_RedelegationResponse_fields &cosmos_staking_v1beta1_RedelegationResponse_msg
#define cosmos_staking_v1beta1_Pool_fields &cosmos_staking_v1beta1_Pool_msg
#define cosmos_staking_v1beta1_ValidatorUpdates_fields &cosmos_staking_v1beta1_ValidatorUpdates_msg

/* Maximum encoded size of messages (where known) */
/* cosmos_staking_v1beta1_HistoricalInfo_size depends on runtime parameters */
/* cosmos_staking_v1beta1_CommissionRates_size depends on runtime parameters */
/* cosmos_staking_v1beta1_Commission_size depends on runtime parameters */
/* cosmos_staking_v1beta1_Description_size depends on runtime parameters */
/* cosmos_staking_v1beta1_Validator_size depends on runtime parameters */
/* cosmos_staking_v1beta1_ValAddresses_size depends on runtime parameters */
/* cosmos_staking_v1beta1_DVPair_size depends on runtime parameters */
/* cosmos_staking_v1beta1_DVPairs_size depends on runtime parameters */
/* cosmos_staking_v1beta1_DVVTriplet_size depends on runtime parameters */
/* cosmos_staking_v1beta1_DVVTriplets_size depends on runtime parameters */
/* cosmos_staking_v1beta1_Delegation_size depends on runtime parameters */
/* cosmos_staking_v1beta1_UnbondingDelegation_size depends on runtime parameters */
/* cosmos_staking_v1beta1_UnbondingDelegationEntry_size depends on runtime parameters */
/* cosmos_staking_v1beta1_RedelegationEntry_size depends on runtime parameters */
/* cosmos_staking_v1beta1_Redelegation_size depends on runtime parameters */
/* cosmos_staking_v1beta1_Params_size depends on runtime parameters */
/* cosmos_staking_v1beta1_DelegationResponse_size depends on runtime parameters */
/* cosmos_staking_v1beta1_RedelegationEntryResponse_size depends on runtime parameters */
/* cosmos_staking_v1beta1_RedelegationResponse_size depends on runtime parameters */
/* cosmos_staking_v1beta1_Pool_size depends on runtime parameters */
/* cosmos_staking_v1beta1_ValidatorUpdates_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
