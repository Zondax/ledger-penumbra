/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_COSMOS_NFT_V1BETA1_COSMOS_NFT_V1BETA1_EVENT_PB_H_INCLUDED
#define PB_COSMOS_NFT_V1BETA1_COSMOS_NFT_V1BETA1_EVENT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* EventSend is emitted on Msg/Send */
typedef struct _cosmos_nft_v1beta1_EventSend {
    /* class_id associated with the nft */
    pb_callback_t class_id;
    /* id is a unique identifier of the nft */
    pb_callback_t id;
    /* sender is the address of the owner of nft */
    pb_callback_t sender;
    /* receiver is the receiver address of nft */
    pb_callback_t receiver;
} cosmos_nft_v1beta1_EventSend;

/* EventMint is emitted on Mint */
typedef struct _cosmos_nft_v1beta1_EventMint {
    /* class_id associated with the nft */
    pb_callback_t class_id;
    /* id is a unique identifier of the nft */
    pb_callback_t id;
    /* owner is the owner address of the nft */
    pb_callback_t owner;
} cosmos_nft_v1beta1_EventMint;

/* EventBurn is emitted on Burn */
typedef struct _cosmos_nft_v1beta1_EventBurn {
    /* class_id associated with the nft */
    pb_callback_t class_id;
    /* id is a unique identifier of the nft */
    pb_callback_t id;
    /* owner is the owner address of the nft */
    pb_callback_t owner;
} cosmos_nft_v1beta1_EventBurn;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cosmos_nft_v1beta1_EventSend_init_default                        \
    {                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_nft_v1beta1_EventMint_init_default        \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_nft_v1beta1_EventBurn_init_default        \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_nft_v1beta1_EventSend_init_zero                           \
    {                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_nft_v1beta1_EventMint_init_zero           \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_nft_v1beta1_EventBurn_init_zero           \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }

/* Field tags (for use in manual encoding/decoding) */
#define cosmos_nft_v1beta1_EventSend_class_id_tag 1
#define cosmos_nft_v1beta1_EventSend_id_tag 2
#define cosmos_nft_v1beta1_EventSend_sender_tag 3
#define cosmos_nft_v1beta1_EventSend_receiver_tag 4
#define cosmos_nft_v1beta1_EventMint_class_id_tag 1
#define cosmos_nft_v1beta1_EventMint_id_tag 2
#define cosmos_nft_v1beta1_EventMint_owner_tag 3
#define cosmos_nft_v1beta1_EventBurn_class_id_tag 1
#define cosmos_nft_v1beta1_EventBurn_id_tag 2
#define cosmos_nft_v1beta1_EventBurn_owner_tag 3

/* Struct field encoding specification for nanopb */
#define cosmos_nft_v1beta1_EventSend_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, class_id, 1)    \
    X(a, CALLBACK, SINGULAR, STRING, id, 2)          \
    X(a, CALLBACK, SINGULAR, STRING, sender, 3)      \
    X(a, CALLBACK, SINGULAR, STRING, receiver, 4)
#define cosmos_nft_v1beta1_EventSend_CALLBACK pb_default_field_callback
#define cosmos_nft_v1beta1_EventSend_DEFAULT NULL

#define cosmos_nft_v1beta1_EventMint_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, class_id, 1)    \
    X(a, CALLBACK, SINGULAR, STRING, id, 2)          \
    X(a, CALLBACK, SINGULAR, STRING, owner, 3)
#define cosmos_nft_v1beta1_EventMint_CALLBACK pb_default_field_callback
#define cosmos_nft_v1beta1_EventMint_DEFAULT NULL

#define cosmos_nft_v1beta1_EventBurn_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, class_id, 1)    \
    X(a, CALLBACK, SINGULAR, STRING, id, 2)          \
    X(a, CALLBACK, SINGULAR, STRING, owner, 3)
#define cosmos_nft_v1beta1_EventBurn_CALLBACK pb_default_field_callback
#define cosmos_nft_v1beta1_EventBurn_DEFAULT NULL

extern const pb_msgdesc_t cosmos_nft_v1beta1_EventSend_msg;
extern const pb_msgdesc_t cosmos_nft_v1beta1_EventMint_msg;
extern const pb_msgdesc_t cosmos_nft_v1beta1_EventBurn_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cosmos_nft_v1beta1_EventSend_fields &cosmos_nft_v1beta1_EventSend_msg
#define cosmos_nft_v1beta1_EventMint_fields &cosmos_nft_v1beta1_EventMint_msg
#define cosmos_nft_v1beta1_EventBurn_fields &cosmos_nft_v1beta1_EventBurn_msg

/* Maximum encoded size of messages (where known) */
/* cosmos_nft_v1beta1_EventSend_size depends on runtime parameters */
/* cosmos_nft_v1beta1_EventMint_size depends on runtime parameters */
/* cosmos_nft_v1beta1_EventBurn_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
