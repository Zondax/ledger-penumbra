/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_COSMOS_NFT_V1BETA1_COSMOS_NFT_V1BETA1_NFT_PB_H_INCLUDED
#define PB_COSMOS_NFT_V1BETA1_COSMOS_NFT_V1BETA1_NFT_PB_H_INCLUDED
#include <pb.h>

#include "google/protobuf/any.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Class defines the class of the nft type. */
typedef struct _cosmos_nft_v1beta1_Class {
    /* id defines the unique identifier of the NFT classification, similar to the contract address of ERC721 */
    pb_callback_t id;
    /* name defines the human-readable name of the NFT classification. Optional */
    pb_callback_t name;
    /* symbol is an abbreviated name for nft classification. Optional */
    pb_callback_t symbol;
    /* description is a brief description of nft classification. Optional */
    pb_callback_t description;
    /* uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional */
    pb_callback_t uri;
    /* uri_hash is a hash of the document pointed by uri. Optional */
    pb_callback_t uri_hash;
    /* data is the app specific metadata of the NFT class. Optional */
    bool has_data;
    google_protobuf_Any data;
} cosmos_nft_v1beta1_Class;

/* NFT defines the NFT. */
typedef struct _cosmos_nft_v1beta1_NFT {
    /* class_id associated with the NFT, similar to the contract address of ERC721 */
    pb_callback_t class_id;
    /* id is a unique identifier of the NFT */
    pb_callback_t id;
    /* uri for the NFT metadata stored off chain */
    pb_callback_t uri;
    /* uri_hash is a hash of the document pointed by uri */
    pb_callback_t uri_hash;
    /* data is an app specific data of the NFT. Optional */
    bool has_data;
    google_protobuf_Any data;
} cosmos_nft_v1beta1_NFT;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cosmos_nft_v1beta1_Class_init_default                                                                  \
    {                                                                                                          \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, \
            google_protobuf_Any_init_default                                                                   \
    }
#define cosmos_nft_v1beta1_NFT_init_default \
    { {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, google_protobuf_Any_init_default }
#define cosmos_nft_v1beta1_Class_init_zero                                                                     \
    {                                                                                                          \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, \
            google_protobuf_Any_init_zero                                                                      \
    }
#define cosmos_nft_v1beta1_NFT_init_zero \
    { {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, google_protobuf_Any_init_zero }

/* Field tags (for use in manual encoding/decoding) */
#define cosmos_nft_v1beta1_Class_id_tag 1
#define cosmos_nft_v1beta1_Class_name_tag 2
#define cosmos_nft_v1beta1_Class_symbol_tag 3
#define cosmos_nft_v1beta1_Class_description_tag 4
#define cosmos_nft_v1beta1_Class_uri_tag 5
#define cosmos_nft_v1beta1_Class_uri_hash_tag 6
#define cosmos_nft_v1beta1_Class_data_tag 7
#define cosmos_nft_v1beta1_NFT_class_id_tag 1
#define cosmos_nft_v1beta1_NFT_id_tag 2
#define cosmos_nft_v1beta1_NFT_uri_tag 3
#define cosmos_nft_v1beta1_NFT_uri_hash_tag 4
#define cosmos_nft_v1beta1_NFT_data_tag 10

/* Struct field encoding specification for nanopb */
#define cosmos_nft_v1beta1_Class_FIELDLIST(X, a)     \
    X(a, CALLBACK, SINGULAR, STRING, id, 1)          \
    X(a, CALLBACK, SINGULAR, STRING, name, 2)        \
    X(a, CALLBACK, SINGULAR, STRING, symbol, 3)      \
    X(a, CALLBACK, SINGULAR, STRING, description, 4) \
    X(a, CALLBACK, SINGULAR, STRING, uri, 5)         \
    X(a, CALLBACK, SINGULAR, STRING, uri_hash, 6)    \
    X(a, STATIC, OPTIONAL, MESSAGE, data, 7)
#define cosmos_nft_v1beta1_Class_CALLBACK pb_default_field_callback
#define cosmos_nft_v1beta1_Class_DEFAULT NULL
#define cosmos_nft_v1beta1_Class_data_MSGTYPE google_protobuf_Any

#define cosmos_nft_v1beta1_NFT_FIELDLIST(X, a)    \
    X(a, CALLBACK, SINGULAR, STRING, class_id, 1) \
    X(a, CALLBACK, SINGULAR, STRING, id, 2)       \
    X(a, CALLBACK, SINGULAR, STRING, uri, 3)      \
    X(a, CALLBACK, SINGULAR, STRING, uri_hash, 4) \
    X(a, STATIC, OPTIONAL, MESSAGE, data, 10)
#define cosmos_nft_v1beta1_NFT_CALLBACK pb_default_field_callback
#define cosmos_nft_v1beta1_NFT_DEFAULT NULL
#define cosmos_nft_v1beta1_NFT_data_MSGTYPE google_protobuf_Any

extern const pb_msgdesc_t cosmos_nft_v1beta1_Class_msg;
extern const pb_msgdesc_t cosmos_nft_v1beta1_NFT_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cosmos_nft_v1beta1_Class_fields &cosmos_nft_v1beta1_Class_msg
#define cosmos_nft_v1beta1_NFT_fields &cosmos_nft_v1beta1_NFT_msg

/* Maximum encoded size of messages (where known) */
/* cosmos_nft_v1beta1_Class_size depends on runtime parameters */
/* cosmos_nft_v1beta1_NFT_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
