/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_COSMOS_NFT_V1BETA1_COSMOS_NFT_V1BETA1_GENESIS_PB_H_INCLUDED
#define PB_COSMOS_NFT_V1BETA1_COSMOS_NFT_V1BETA1_GENESIS_PB_H_INCLUDED
#include <pb.h>

#include "cosmos/nft/v1beta1/nft.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* GenesisState defines the nft module's genesis state. */
typedef struct _cosmos_nft_v1beta1_GenesisState {
    /* class defines the class of the nft type. */
    pb_callback_t classes;
    /* entry defines all nft owned by a person. */
    pb_callback_t entries;
} cosmos_nft_v1beta1_GenesisState;

/* Entry Defines all nft owned by a person */
typedef struct _cosmos_nft_v1beta1_Entry {
    /* owner is the owner address of the following nft */
    pb_callback_t owner;
    /* nfts is a group of nfts of the same owner */
    pb_callback_t nfts;
} cosmos_nft_v1beta1_Entry;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cosmos_nft_v1beta1_GenesisState_init_default \
    {                                                \
        {{NULL}, NULL}, { {NULL}, NULL }             \
    }
#define cosmos_nft_v1beta1_Entry_init_default \
    {                                         \
        {{NULL}, NULL}, { {NULL}, NULL }      \
    }
#define cosmos_nft_v1beta1_GenesisState_init_zero \
    {                                             \
        {{NULL}, NULL}, { {NULL}, NULL }          \
    }
#define cosmos_nft_v1beta1_Entry_init_zero \
    {                                      \
        {{NULL}, NULL}, { {NULL}, NULL }   \
    }

/* Field tags (for use in manual encoding/decoding) */
#define cosmos_nft_v1beta1_GenesisState_classes_tag 1
#define cosmos_nft_v1beta1_GenesisState_entries_tag 2
#define cosmos_nft_v1beta1_Entry_owner_tag 1
#define cosmos_nft_v1beta1_Entry_nfts_tag 2

/* Struct field encoding specification for nanopb */
#define cosmos_nft_v1beta1_GenesisState_FIELDLIST(X, a) \
    X(a, CALLBACK, REPEATED, MESSAGE, classes, 1)       \
    X(a, CALLBACK, REPEATED, MESSAGE, entries, 2)
#define cosmos_nft_v1beta1_GenesisState_CALLBACK pb_default_field_callback
#define cosmos_nft_v1beta1_GenesisState_DEFAULT NULL
#define cosmos_nft_v1beta1_GenesisState_classes_MSGTYPE cosmos_nft_v1beta1_Class
#define cosmos_nft_v1beta1_GenesisState_entries_MSGTYPE cosmos_nft_v1beta1_Entry

#define cosmos_nft_v1beta1_Entry_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, owner, 1)   \
    X(a, CALLBACK, REPEATED, MESSAGE, nfts, 2)
#define cosmos_nft_v1beta1_Entry_CALLBACK pb_default_field_callback
#define cosmos_nft_v1beta1_Entry_DEFAULT NULL
#define cosmos_nft_v1beta1_Entry_nfts_MSGTYPE cosmos_nft_v1beta1_NFT

extern const pb_msgdesc_t cosmos_nft_v1beta1_GenesisState_msg;
extern const pb_msgdesc_t cosmos_nft_v1beta1_Entry_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cosmos_nft_v1beta1_GenesisState_fields &cosmos_nft_v1beta1_GenesisState_msg
#define cosmos_nft_v1beta1_Entry_fields &cosmos_nft_v1beta1_Entry_msg

/* Maximum encoded size of messages (where known) */
/* cosmos_nft_v1beta1_GenesisState_size depends on runtime parameters */
/* cosmos_nft_v1beta1_Entry_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
