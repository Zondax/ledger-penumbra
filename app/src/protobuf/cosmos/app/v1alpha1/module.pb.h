/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_COSMOS_APP_V1ALPHA1_COSMOS_APP_V1ALPHA1_MODULE_PB_H_INCLUDED
#define PB_COSMOS_APP_V1ALPHA1_COSMOS_APP_V1ALPHA1_MODULE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* ModuleDescriptor describes an app module. */
typedef struct _cosmos_app_v1alpha1_ModuleDescriptor {
    /* go_import names the package that should be imported by an app to load the
 module in the runtime module registry. It is required to make debugging
 of configuration errors easier for users. */
    pb_callback_t go_import;
    /* use_package refers to a protobuf package that this module
 uses and exposes to the world. In an app, only one module should "use"
 or own a single protobuf package. It is assumed that the module uses
 all of the .proto files in a single package. */
    pb_callback_t use_package;
    /* can_migrate_from defines which module versions this module can migrate
 state from. The framework will check that one module version is able to
 migrate from a previous module version before attempting to update its
 config. It is assumed that modules can transitively migrate from earlier
 versions. For instance if v3 declares it can migrate from v2, and v2
 declares it can migrate from v1, the framework knows how to migrate
 from v1 to v3, assuming all 3 module versions are registered at runtime. */
    pb_callback_t can_migrate_from;
} cosmos_app_v1alpha1_ModuleDescriptor;

/* PackageReference is a reference to a protobuf package used by a module. */
typedef struct _cosmos_app_v1alpha1_PackageReference {
    /* name is the fully-qualified name of the package. */
    pb_callback_t name;
    /* revision is the optional revision of the package that is being used.
 Protobuf packages used in Cosmos should generally have a major version
 as the last part of the package name, ex. foo.bar.baz.v1.
 The revision of a package can be thought of as the minor version of a
 package which has additional backwards compatible definitions that weren't
 present in a previous version.

 A package should indicate its revision with a source code comment
 above the package declaration in one of its files containing the
 text "Revision N" where N is an integer revision. All packages start
 at revision 0 the first time they are released in a module.

 When a new version of a module is released and items are added to existing
 .proto files, these definitions should contain comments of the form
 "Since: Revision N" where N is an integer revision.

 When the module runtime starts up, it will check the pinned proto
 image and panic if there are runtime protobuf definitions that are not
 in the pinned descriptor which do not have
 a "Since Revision N" comment or have a "Since Revision N" comment where
 N is <= to the revision specified here. This indicates that the protobuf
 files have been updated, but the pinned file descriptor hasn't.

 If there are items in the pinned file descriptor with a revision
 greater than the value indicated here, this will also cause a panic
 as it may mean that the pinned descriptor for a legacy module has been
 improperly updated or that there is some other versioning discrepancy.
 Runtime protobuf definitions will also be checked for compatibility
 with pinned file descriptors to make sure there are no incompatible changes.

 This behavior ensures that:
 * pinned proto images are up-to-date
 * protobuf files are carefully annotated with revision comments which
   are important good client UX
 * protobuf files are changed in backwards and forwards compatible ways */
    uint32_t revision;
} cosmos_app_v1alpha1_PackageReference;

/* MigrateFromInfo is information on a module version that a newer module
 can migrate from. */
typedef struct _cosmos_app_v1alpha1_MigrateFromInfo {
    /* module is the fully-qualified protobuf name of the module config object
 for the previous module version, ex: "cosmos.group.module.v1.Module". */
    pb_callback_t module;
} cosmos_app_v1alpha1_MigrateFromInfo;

/* Extensions */
extern const pb_extension_type_t cosmos_app_v1alpha1_module; /* field type: cosmos_app_v1alpha1_ModuleDescriptor module; */

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cosmos_app_v1alpha1_ModuleDescriptor_init_default \
    {                                                     \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL }  \
    }
#define cosmos_app_v1alpha1_PackageReference_init_default \
    { {{NULL}, NULL}, 0 }
#define cosmos_app_v1alpha1_MigrateFromInfo_init_default \
    {                                                    \
        { {NULL}, NULL }                                 \
    }
#define cosmos_app_v1alpha1_ModuleDescriptor_init_zero   \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_app_v1alpha1_PackageReference_init_zero \
    { {{NULL}, NULL}, 0 }
#define cosmos_app_v1alpha1_MigrateFromInfo_init_zero \
    {                                                 \
        { {NULL}, NULL }                              \
    }

/* Field tags (for use in manual encoding/decoding) */
#define cosmos_app_v1alpha1_ModuleDescriptor_go_import_tag 1
#define cosmos_app_v1alpha1_ModuleDescriptor_use_package_tag 2
#define cosmos_app_v1alpha1_ModuleDescriptor_can_migrate_from_tag 3
#define cosmos_app_v1alpha1_PackageReference_name_tag 1
#define cosmos_app_v1alpha1_PackageReference_revision_tag 2
#define cosmos_app_v1alpha1_MigrateFromInfo_module_tag 1
#define cosmos_app_v1alpha1_module_tag 57193479

/* Struct field encoding specification for nanopb */
#define cosmos_app_v1alpha1_ModuleDescriptor_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, go_import, 1)           \
    X(a, CALLBACK, REPEATED, MESSAGE, use_package, 2)        \
    X(a, CALLBACK, REPEATED, MESSAGE, can_migrate_from, 3)
#define cosmos_app_v1alpha1_ModuleDescriptor_CALLBACK pb_default_field_callback
#define cosmos_app_v1alpha1_ModuleDescriptor_DEFAULT NULL
#define cosmos_app_v1alpha1_ModuleDescriptor_use_package_MSGTYPE cosmos_app_v1alpha1_PackageReference
#define cosmos_app_v1alpha1_ModuleDescriptor_can_migrate_from_MSGTYPE cosmos_app_v1alpha1_MigrateFromInfo

#define cosmos_app_v1alpha1_PackageReference_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, name, 1)                \
    X(a, STATIC, SINGULAR, UINT32, revision, 2)
#define cosmos_app_v1alpha1_PackageReference_CALLBACK pb_default_field_callback
#define cosmos_app_v1alpha1_PackageReference_DEFAULT NULL

#define cosmos_app_v1alpha1_MigrateFromInfo_FIELDLIST(X, a) X(a, CALLBACK, SINGULAR, STRING, module, 1)
#define cosmos_app_v1alpha1_MigrateFromInfo_CALLBACK pb_default_field_callback
#define cosmos_app_v1alpha1_MigrateFromInfo_DEFAULT NULL

extern const pb_msgdesc_t cosmos_app_v1alpha1_ModuleDescriptor_msg;
extern const pb_msgdesc_t cosmos_app_v1alpha1_PackageReference_msg;
extern const pb_msgdesc_t cosmos_app_v1alpha1_MigrateFromInfo_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cosmos_app_v1alpha1_ModuleDescriptor_fields &cosmos_app_v1alpha1_ModuleDescriptor_msg
#define cosmos_app_v1alpha1_PackageReference_fields &cosmos_app_v1alpha1_PackageReference_msg
#define cosmos_app_v1alpha1_MigrateFromInfo_fields &cosmos_app_v1alpha1_MigrateFromInfo_msg

/* Maximum encoded size of messages (where known) */
/* cosmos_app_v1alpha1_ModuleDescriptor_size depends on runtime parameters */
/* cosmos_app_v1alpha1_PackageReference_size depends on runtime parameters */
/* cosmos_app_v1alpha1_MigrateFromInfo_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
