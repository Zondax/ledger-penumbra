/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_COSMOS_GROUP_V1_COSMOS_GROUP_V1_TYPES_PB_H_INCLUDED
#define PB_COSMOS_GROUP_V1_COSMOS_GROUP_V1_TYPES_PB_H_INCLUDED
#include <pb.h>

#include "amino/amino.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/any.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/timestamp.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* VoteOption enumerates the valid vote options for a given proposal. */
typedef enum _cosmos_group_v1_VoteOption {
    /* VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will
 return an error. */
    cosmos_group_v1_VoteOption_VOTE_OPTION_UNSPECIFIED = 0,
    /* VOTE_OPTION_YES defines a yes vote option. */
    cosmos_group_v1_VoteOption_VOTE_OPTION_YES = 1,
    /* VOTE_OPTION_ABSTAIN defines an abstain vote option. */
    cosmos_group_v1_VoteOption_VOTE_OPTION_ABSTAIN = 2,
    /* VOTE_OPTION_NO defines a no vote option. */
    cosmos_group_v1_VoteOption_VOTE_OPTION_NO = 3,
    /* VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */
    cosmos_group_v1_VoteOption_VOTE_OPTION_NO_WITH_VETO = 4
} cosmos_group_v1_VoteOption;

/* ProposalStatus defines proposal statuses. */
typedef enum _cosmos_group_v1_ProposalStatus {
    /* An empty value is invalid and not allowed. */
    cosmos_group_v1_ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED = 0,
    /* Initial status of a proposal when submitted. */
    cosmos_group_v1_ProposalStatus_PROPOSAL_STATUS_SUBMITTED = 1,
    /* Final status of a proposal when the final tally is done and the outcome
 passes the group policy's decision policy. */
    cosmos_group_v1_ProposalStatus_PROPOSAL_STATUS_ACCEPTED = 2,
    /* Final status of a proposal when the final tally is done and the outcome
 is rejected by the group policy's decision policy. */
    cosmos_group_v1_ProposalStatus_PROPOSAL_STATUS_REJECTED = 3,
    /* Final status of a proposal when the group policy is modified before the
 final tally. */
    cosmos_group_v1_ProposalStatus_PROPOSAL_STATUS_ABORTED = 4,
    /* A proposal can be withdrawn before the voting start time by the owner.
 When this happens the final status is Withdrawn. */
    cosmos_group_v1_ProposalStatus_PROPOSAL_STATUS_WITHDRAWN = 5
} cosmos_group_v1_ProposalStatus;

/* ProposalExecutorResult defines types of proposal executor results. */
typedef enum _cosmos_group_v1_ProposalExecutorResult {
    /* An empty value is not allowed. */
    cosmos_group_v1_ProposalExecutorResult_PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED = 0,
    /* We have not yet run the executor. */
    cosmos_group_v1_ProposalExecutorResult_PROPOSAL_EXECUTOR_RESULT_NOT_RUN = 1,
    /* The executor was successful and proposed action updated state. */
    cosmos_group_v1_ProposalExecutorResult_PROPOSAL_EXECUTOR_RESULT_SUCCESS = 2,
    /* The executor returned an error and proposed action didn't update state. */
    cosmos_group_v1_ProposalExecutorResult_PROPOSAL_EXECUTOR_RESULT_FAILURE = 3
} cosmos_group_v1_ProposalExecutorResult;

/* Struct definitions */
/* Member represents a group member with an account address,
 non-zero weight, metadata and added_at timestamp. */
typedef struct _cosmos_group_v1_Member {
    /* address is the member's account address. */
    pb_callback_t address;
    /* weight is the member's voting weight that should be greater than 0. */
    pb_callback_t weight;
    /* metadata is any arbitrary metadata attached to the member. */
    pb_callback_t metadata;
    /* added_at is a timestamp specifying when a member was added. */
    bool has_added_at;
    google_protobuf_Timestamp added_at;
} cosmos_group_v1_Member;

/* MemberRequest represents a group member to be used in Msg server requests.
 Contrary to `Member`, it doesn't have any `added_at` field
 since this field cannot be set as part of requests. */
typedef struct _cosmos_group_v1_MemberRequest {
    /* address is the member's account address. */
    pb_callback_t address;
    /* weight is the member's voting weight that should be greater than 0. */
    pb_callback_t weight;
    /* metadata is any arbitrary metadata attached to the member. */
    pb_callback_t metadata;
} cosmos_group_v1_MemberRequest;

/* DecisionPolicyWindows defines the different windows for voting and execution. */
typedef struct _cosmos_group_v1_DecisionPolicyWindows {
    /* voting_period is the duration from submission of a proposal to the end of voting period
 Within this times votes can be submitted with MsgVote. */
    bool has_voting_period;
    google_protobuf_Duration voting_period;
    /* min_execution_period is the minimum duration after the proposal submission
 where members can start sending MsgExec. This means that the window for
 sending a MsgExec transaction is:
 `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
 where max_execution_period is a app-specific config, defined in the keeper.
 If not set, min_execution_period will default to 0.

 Please make sure to set a `min_execution_period` that is smaller than
 `voting_period + max_execution_period`, or else the above execution window
 is empty, meaning that all proposals created with this decision policy
 won't be able to be executed. */
    bool has_min_execution_period;
    google_protobuf_Duration min_execution_period;
} cosmos_group_v1_DecisionPolicyWindows;

/* ThresholdDecisionPolicy is a decision policy where a proposal passes when it
 satisfies the two following conditions:
 1. The sum of all `YES` voter's weights is greater or equal than the defined
    `threshold`.
 2. The voting and execution periods of the proposal respect the parameters
    given by `windows`. */
typedef struct _cosmos_group_v1_ThresholdDecisionPolicy {
    /* threshold is the minimum weighted sum of `YES` votes that must be met or
 exceeded for a proposal to succeed. */
    pb_callback_t threshold;
    /* windows defines the different windows for voting and execution. */
    bool has_windows;
    cosmos_group_v1_DecisionPolicyWindows windows;
} cosmos_group_v1_ThresholdDecisionPolicy;

/* PercentageDecisionPolicy is a decision policy where a proposal passes when
 it satisfies the two following conditions:
 1. The percentage of all `YES` voters' weights out of the total group weight
    is greater or equal than the given `percentage`.
 2. The voting and execution periods of the proposal respect the parameters
    given by `windows`. */
typedef struct _cosmos_group_v1_PercentageDecisionPolicy {
    /* percentage is the minimum percentage of the weighted sum of `YES` votes must
 meet for a proposal to succeed. */
    pb_callback_t percentage;
    /* windows defines the different windows for voting and execution. */
    bool has_windows;
    cosmos_group_v1_DecisionPolicyWindows windows;
} cosmos_group_v1_PercentageDecisionPolicy;

/* GroupInfo represents the high-level on-chain information for a group. */
typedef struct _cosmos_group_v1_GroupInfo {
    /* id is the unique ID of the group. */
    uint64_t id;
    /* admin is the account address of the group's admin. */
    pb_callback_t admin;
    /* metadata is any arbitrary metadata to attached to the group.
 the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1 */
    pb_callback_t metadata;
    /* version is used to track changes to a group's membership structure that
 would break existing proposals. Whenever any members weight is changed,
 or any member is added or removed this version is incremented and will
 cause proposals based on older versions of this group to fail */
    uint64_t version;
    /* total_weight is the sum of the group members' weights. */
    pb_callback_t total_weight;
    /* created_at is a timestamp specifying when a group was created. */
    bool has_created_at;
    google_protobuf_Timestamp created_at;
} cosmos_group_v1_GroupInfo;

/* GroupMember represents the relationship between a group and a member. */
typedef struct _cosmos_group_v1_GroupMember {
    /* group_id is the unique ID of the group. */
    uint64_t group_id;
    /* member is the member data. */
    bool has_member;
    cosmos_group_v1_Member member;
} cosmos_group_v1_GroupMember;

/* GroupPolicyInfo represents the high-level on-chain information for a group policy. */
typedef struct _cosmos_group_v1_GroupPolicyInfo {
    /* address is the account address of group policy. */
    pb_callback_t address;
    /* group_id is the unique ID of the group. */
    uint64_t group_id;
    /* admin is the account address of the group admin. */
    pb_callback_t admin;
    /* metadata is any arbitrary metadata attached to the group policy.
 the recommended format of the metadata is to be found here:
 https://docs.cosmos.network/v0.47/modules/group#decision-policy-1 */
    pb_callback_t metadata;
    /* version is used to track changes to a group's GroupPolicyInfo structure that
 would create a different result on a running proposal. */
    uint64_t version;
    /* decision_policy specifies the group policy's decision policy. */
    bool has_decision_policy;
    google_protobuf_Any decision_policy;
    /* created_at is a timestamp specifying when a group policy was created. */
    bool has_created_at;
    google_protobuf_Timestamp created_at;
} cosmos_group_v1_GroupPolicyInfo;

/* TallyResult represents the sum of weighted votes for each vote option. */
typedef struct _cosmos_group_v1_TallyResult {
    /* yes_count is the weighted sum of yes votes. */
    pb_callback_t yes_count;
    /* abstain_count is the weighted sum of abstainers. */
    pb_callback_t abstain_count;
    /* no_count is the weighted sum of no votes. */
    pb_callback_t no_count;
    /* no_with_veto_count is the weighted sum of veto. */
    pb_callback_t no_with_veto_count;
} cosmos_group_v1_TallyResult;

/* Proposal defines a group proposal. Any member of a group can submit a proposal
 for a group policy to decide upon.
 A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal
 passes as well as some optional metadata associated with the proposal. */
typedef struct _cosmos_group_v1_Proposal {
    /* id is the unique id of the proposal. */
    uint64_t id;
    /* group_policy_address is the account address of group policy. */
    pb_callback_t group_policy_address;
    /* metadata is any arbitrary metadata attached to the proposal.
 the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#proposal-4 */
    pb_callback_t metadata;
    /* proposers are the account addresses of the proposers. */
    pb_callback_t proposers;
    /* submit_time is a timestamp specifying when a proposal was submitted. */
    bool has_submit_time;
    google_protobuf_Timestamp submit_time;
    /* group_version tracks the version of the group at proposal submission.
 This field is here for informational purposes only. */
    uint64_t group_version;
    /* group_policy_version tracks the version of the group policy at proposal submission.
 When a decision policy is changed, existing proposals from previous policy
 versions will become invalid with the `ABORTED` status.
 This field is here for informational purposes only. */
    uint64_t group_policy_version;
    /* status represents the high level position in the life cycle of the proposal. Initial value is Submitted. */
    cosmos_group_v1_ProposalStatus status;
    /* final_tally_result contains the sums of all weighted votes for this
 proposal for each vote option. It is empty at submission, and only
 populated after tallying, at voting period end or at proposal execution,
 whichever happens first. */
    bool has_final_tally_result;
    cosmos_group_v1_TallyResult final_tally_result;
    /* voting_period_end is the timestamp before which voting must be done.
 Unless a successful MsgExec is called before (to execute a proposal whose
 tally is successful before the voting period ends), tallying will be done
 at this point, and the `final_tally_result`and `status` fields will be
 accordingly updated. */
    bool has_voting_period_end;
    google_protobuf_Timestamp voting_period_end;
    /* executor_result is the final result of the proposal execution. Initial value is NotRun. */
    cosmos_group_v1_ProposalExecutorResult executor_result;
    /* messages is a list of `sdk.Msg`s that will be executed if the proposal passes. */
    pb_callback_t messages;
    /* title is the title of the proposal

 Since: cosmos-sdk 0.47 */
    pb_callback_t title;
    /* summary is a short summary of the proposal

 Since: cosmos-sdk 0.47 */
    pb_callback_t summary;
} cosmos_group_v1_Proposal;

/* Vote represents a vote for a proposal.string metadata */
typedef struct _cosmos_group_v1_Vote {
    /* proposal is the unique ID of the proposal. */
    uint64_t proposal_id;
    /* voter is the account address of the voter. */
    pb_callback_t voter;
    /* option is the voter's choice on the proposal. */
    cosmos_group_v1_VoteOption option;
    /* metadata is any arbitrary metadata attached to the vote.
 the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#vote-2 */
    pb_callback_t metadata;
    /* submit_time is the timestamp when the vote was submitted. */
    bool has_submit_time;
    google_protobuf_Timestamp submit_time;
} cosmos_group_v1_Vote;

#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _cosmos_group_v1_VoteOption_MIN cosmos_group_v1_VoteOption_VOTE_OPTION_UNSPECIFIED
#define _cosmos_group_v1_VoteOption_MAX cosmos_group_v1_VoteOption_VOTE_OPTION_NO_WITH_VETO
#define _cosmos_group_v1_VoteOption_ARRAYSIZE \
    ((cosmos_group_v1_VoteOption)(cosmos_group_v1_VoteOption_VOTE_OPTION_NO_WITH_VETO + 1))

#define _cosmos_group_v1_ProposalStatus_MIN cosmos_group_v1_ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED
#define _cosmos_group_v1_ProposalStatus_MAX cosmos_group_v1_ProposalStatus_PROPOSAL_STATUS_WITHDRAWN
#define _cosmos_group_v1_ProposalStatus_ARRAYSIZE \
    ((cosmos_group_v1_ProposalStatus)(cosmos_group_v1_ProposalStatus_PROPOSAL_STATUS_WITHDRAWN + 1))

#define _cosmos_group_v1_ProposalExecutorResult_MIN \
    cosmos_group_v1_ProposalExecutorResult_PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
#define _cosmos_group_v1_ProposalExecutorResult_MAX cosmos_group_v1_ProposalExecutorResult_PROPOSAL_EXECUTOR_RESULT_FAILURE
#define _cosmos_group_v1_ProposalExecutorResult_ARRAYSIZE \
    ((cosmos_group_v1_ProposalExecutorResult)(cosmos_group_v1_ProposalExecutorResult_PROPOSAL_EXECUTOR_RESULT_FAILURE + 1))

#define cosmos_group_v1_Proposal_status_ENUMTYPE cosmos_group_v1_ProposalStatus
#define cosmos_group_v1_Proposal_executor_result_ENUMTYPE cosmos_group_v1_ProposalExecutorResult

#define cosmos_group_v1_Vote_option_ENUMTYPE cosmos_group_v1_VoteOption

/* Initializer values for message structs */
#define cosmos_group_v1_Member_init_default \
    { {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, google_protobuf_Timestamp_init_default }
#define cosmos_group_v1_MemberRequest_init_default       \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_group_v1_ThresholdDecisionPolicy_init_default \
    { {{NULL}, NULL}, false, cosmos_group_v1_DecisionPolicyWindows_init_default }
#define cosmos_group_v1_PercentageDecisionPolicy_init_default \
    { {{NULL}, NULL}, false, cosmos_group_v1_DecisionPolicyWindows_init_default }
#define cosmos_group_v1_DecisionPolicyWindows_init_default \
    { false, google_protobuf_Duration_init_default, false, google_protobuf_Duration_init_default }
#define cosmos_group_v1_GroupInfo_init_default \
    { 0, {{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, false, google_protobuf_Timestamp_init_default }
#define cosmos_group_v1_GroupMember_init_default \
    { 0, false, cosmos_group_v1_Member_init_default }
#define cosmos_group_v1_GroupPolicyInfo_init_default                                                          \
    {                                                                                                         \
        {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0, false, google_protobuf_Any_init_default, false, \
            google_protobuf_Timestamp_init_default                                                            \
    }
#define cosmos_group_v1_Proposal_init_default                                                                    \
    {                                                                                                            \
        0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, google_protobuf_Timestamp_init_default, 0, 0,  \
            _cosmos_group_v1_ProposalStatus_MIN, false, cosmos_group_v1_TallyResult_init_default, false,         \
            google_protobuf_Timestamp_init_default, _cosmos_group_v1_ProposalExecutorResult_MIN, {{NULL}, NULL}, \
            {{NULL}, NULL}, {                                                                                    \
            {NULL}, NULL                                                                                         \
        }                                                                                                        \
    }
#define cosmos_group_v1_TallyResult_init_default                         \
    {                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_group_v1_Vote_init_default \
    { 0, {{NULL}, NULL}, _cosmos_group_v1_VoteOption_MIN, {{NULL}, NULL}, false, google_protobuf_Timestamp_init_default }
#define cosmos_group_v1_Member_init_zero \
    { {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, google_protobuf_Timestamp_init_zero }
#define cosmos_group_v1_MemberRequest_init_zero          \
    {                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_group_v1_ThresholdDecisionPolicy_init_zero \
    { {{NULL}, NULL}, false, cosmos_group_v1_DecisionPolicyWindows_init_zero }
#define cosmos_group_v1_PercentageDecisionPolicy_init_zero \
    { {{NULL}, NULL}, false, cosmos_group_v1_DecisionPolicyWindows_init_zero }
#define cosmos_group_v1_DecisionPolicyWindows_init_zero \
    { false, google_protobuf_Duration_init_zero, false, google_protobuf_Duration_init_zero }
#define cosmos_group_v1_GroupInfo_init_zero \
    { 0, {{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, false, google_protobuf_Timestamp_init_zero }
#define cosmos_group_v1_GroupMember_init_zero \
    { 0, false, cosmos_group_v1_Member_init_zero }
#define cosmos_group_v1_GroupPolicyInfo_init_zero                                                          \
    {                                                                                                      \
        {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0, false, google_protobuf_Any_init_zero, false, \
            google_protobuf_Timestamp_init_zero                                                            \
    }
#define cosmos_group_v1_Proposal_init_zero                                                                    \
    {                                                                                                         \
        0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, google_protobuf_Timestamp_init_zero, 0, 0,  \
            _cosmos_group_v1_ProposalStatus_MIN, false, cosmos_group_v1_TallyResult_init_zero, false,         \
            google_protobuf_Timestamp_init_zero, _cosmos_group_v1_ProposalExecutorResult_MIN, {{NULL}, NULL}, \
            {{NULL}, NULL}, {                                                                                 \
            {NULL}, NULL                                                                                      \
        }                                                                                                     \
    }
#define cosmos_group_v1_TallyResult_init_zero                            \
    {                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define cosmos_group_v1_Vote_init_zero \
    { 0, {{NULL}, NULL}, _cosmos_group_v1_VoteOption_MIN, {{NULL}, NULL}, false, google_protobuf_Timestamp_init_zero }

/* Field tags (for use in manual encoding/decoding) */
#define cosmos_group_v1_Member_address_tag 1
#define cosmos_group_v1_Member_weight_tag 2
#define cosmos_group_v1_Member_metadata_tag 3
#define cosmos_group_v1_Member_added_at_tag 4
#define cosmos_group_v1_MemberRequest_address_tag 1
#define cosmos_group_v1_MemberRequest_weight_tag 2
#define cosmos_group_v1_MemberRequest_metadata_tag 3
#define cosmos_group_v1_DecisionPolicyWindows_voting_period_tag 1
#define cosmos_group_v1_DecisionPolicyWindows_min_execution_period_tag 2
#define cosmos_group_v1_ThresholdDecisionPolicy_threshold_tag 1
#define cosmos_group_v1_ThresholdDecisionPolicy_windows_tag 2
#define cosmos_group_v1_PercentageDecisionPolicy_percentage_tag 1
#define cosmos_group_v1_PercentageDecisionPolicy_windows_tag 2
#define cosmos_group_v1_GroupInfo_id_tag 1
#define cosmos_group_v1_GroupInfo_admin_tag 2
#define cosmos_group_v1_GroupInfo_metadata_tag 3
#define cosmos_group_v1_GroupInfo_version_tag 4
#define cosmos_group_v1_GroupInfo_total_weight_tag 5
#define cosmos_group_v1_GroupInfo_created_at_tag 6
#define cosmos_group_v1_GroupMember_group_id_tag 1
#define cosmos_group_v1_GroupMember_member_tag 2
#define cosmos_group_v1_GroupPolicyInfo_address_tag 1
#define cosmos_group_v1_GroupPolicyInfo_group_id_tag 2
#define cosmos_group_v1_GroupPolicyInfo_admin_tag 3
#define cosmos_group_v1_GroupPolicyInfo_metadata_tag 4
#define cosmos_group_v1_GroupPolicyInfo_version_tag 5
#define cosmos_group_v1_GroupPolicyInfo_decision_policy_tag 6
#define cosmos_group_v1_GroupPolicyInfo_created_at_tag 7
#define cosmos_group_v1_TallyResult_yes_count_tag 1
#define cosmos_group_v1_TallyResult_abstain_count_tag 2
#define cosmos_group_v1_TallyResult_no_count_tag 3
#define cosmos_group_v1_TallyResult_no_with_veto_count_tag 4
#define cosmos_group_v1_Proposal_id_tag 1
#define cosmos_group_v1_Proposal_group_policy_address_tag 2
#define cosmos_group_v1_Proposal_metadata_tag 3
#define cosmos_group_v1_Proposal_proposers_tag 4
#define cosmos_group_v1_Proposal_submit_time_tag 5
#define cosmos_group_v1_Proposal_group_version_tag 6
#define cosmos_group_v1_Proposal_group_policy_version_tag 7
#define cosmos_group_v1_Proposal_status_tag 8
#define cosmos_group_v1_Proposal_final_tally_result_tag 9
#define cosmos_group_v1_Proposal_voting_period_end_tag 10
#define cosmos_group_v1_Proposal_executor_result_tag 11
#define cosmos_group_v1_Proposal_messages_tag 12
#define cosmos_group_v1_Proposal_title_tag 13
#define cosmos_group_v1_Proposal_summary_tag 14
#define cosmos_group_v1_Vote_proposal_id_tag 1
#define cosmos_group_v1_Vote_voter_tag 2
#define cosmos_group_v1_Vote_option_tag 3
#define cosmos_group_v1_Vote_metadata_tag 4
#define cosmos_group_v1_Vote_submit_time_tag 5

/* Struct field encoding specification for nanopb */
#define cosmos_group_v1_Member_FIELDLIST(X, a)    \
    X(a, CALLBACK, SINGULAR, STRING, address, 1)  \
    X(a, CALLBACK, SINGULAR, STRING, weight, 2)   \
    X(a, CALLBACK, SINGULAR, STRING, metadata, 3) \
    X(a, STATIC, OPTIONAL, MESSAGE, added_at, 4)
#define cosmos_group_v1_Member_CALLBACK pb_default_field_callback
#define cosmos_group_v1_Member_DEFAULT NULL
#define cosmos_group_v1_Member_added_at_MSGTYPE google_protobuf_Timestamp

#define cosmos_group_v1_MemberRequest_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, address, 1)      \
    X(a, CALLBACK, SINGULAR, STRING, weight, 2)       \
    X(a, CALLBACK, SINGULAR, STRING, metadata, 3)
#define cosmos_group_v1_MemberRequest_CALLBACK pb_default_field_callback
#define cosmos_group_v1_MemberRequest_DEFAULT NULL

#define cosmos_group_v1_ThresholdDecisionPolicy_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, threshold, 1)              \
    X(a, STATIC, OPTIONAL, MESSAGE, windows, 2)
#define cosmos_group_v1_ThresholdDecisionPolicy_CALLBACK pb_default_field_callback
#define cosmos_group_v1_ThresholdDecisionPolicy_DEFAULT NULL
#define cosmos_group_v1_ThresholdDecisionPolicy_windows_MSGTYPE cosmos_group_v1_DecisionPolicyWindows

#define cosmos_group_v1_PercentageDecisionPolicy_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, percentage, 1)              \
    X(a, STATIC, OPTIONAL, MESSAGE, windows, 2)
#define cosmos_group_v1_PercentageDecisionPolicy_CALLBACK pb_default_field_callback
#define cosmos_group_v1_PercentageDecisionPolicy_DEFAULT NULL
#define cosmos_group_v1_PercentageDecisionPolicy_windows_MSGTYPE cosmos_group_v1_DecisionPolicyWindows

#define cosmos_group_v1_DecisionPolicyWindows_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, voting_period, 1)         \
    X(a, STATIC, OPTIONAL, MESSAGE, min_execution_period, 2)
#define cosmos_group_v1_DecisionPolicyWindows_CALLBACK NULL
#define cosmos_group_v1_DecisionPolicyWindows_DEFAULT NULL
#define cosmos_group_v1_DecisionPolicyWindows_voting_period_MSGTYPE google_protobuf_Duration
#define cosmos_group_v1_DecisionPolicyWindows_min_execution_period_MSGTYPE google_protobuf_Duration

#define cosmos_group_v1_GroupInfo_FIELDLIST(X, a)     \
    X(a, STATIC, SINGULAR, UINT64, id, 1)             \
    X(a, CALLBACK, SINGULAR, STRING, admin, 2)        \
    X(a, CALLBACK, SINGULAR, STRING, metadata, 3)     \
    X(a, STATIC, SINGULAR, UINT64, version, 4)        \
    X(a, CALLBACK, SINGULAR, STRING, total_weight, 5) \
    X(a, STATIC, OPTIONAL, MESSAGE, created_at, 6)
#define cosmos_group_v1_GroupInfo_CALLBACK pb_default_field_callback
#define cosmos_group_v1_GroupInfo_DEFAULT NULL
#define cosmos_group_v1_GroupInfo_created_at_MSGTYPE google_protobuf_Timestamp

#define cosmos_group_v1_GroupMember_FIELDLIST(X, a) \
    X(a, STATIC, SINGULAR, UINT64, group_id, 1)     \
    X(a, STATIC, OPTIONAL, MESSAGE, member, 2)
#define cosmos_group_v1_GroupMember_CALLBACK NULL
#define cosmos_group_v1_GroupMember_DEFAULT NULL
#define cosmos_group_v1_GroupMember_member_MSGTYPE cosmos_group_v1_Member

#define cosmos_group_v1_GroupPolicyInfo_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, address, 1)        \
    X(a, STATIC, SINGULAR, UINT64, group_id, 2)         \
    X(a, CALLBACK, SINGULAR, STRING, admin, 3)          \
    X(a, CALLBACK, SINGULAR, STRING, metadata, 4)       \
    X(a, STATIC, SINGULAR, UINT64, version, 5)          \
    X(a, STATIC, OPTIONAL, MESSAGE, decision_policy, 6) \
    X(a, STATIC, OPTIONAL, MESSAGE, created_at, 7)
#define cosmos_group_v1_GroupPolicyInfo_CALLBACK pb_default_field_callback
#define cosmos_group_v1_GroupPolicyInfo_DEFAULT NULL
#define cosmos_group_v1_GroupPolicyInfo_decision_policy_MSGTYPE google_protobuf_Any
#define cosmos_group_v1_GroupPolicyInfo_created_at_MSGTYPE google_protobuf_Timestamp

#define cosmos_group_v1_Proposal_FIELDLIST(X, a)              \
    X(a, STATIC, SINGULAR, UINT64, id, 1)                     \
    X(a, CALLBACK, SINGULAR, STRING, group_policy_address, 2) \
    X(a, CALLBACK, SINGULAR, STRING, metadata, 3)             \
    X(a, CALLBACK, REPEATED, STRING, proposers, 4)            \
    X(a, STATIC, OPTIONAL, MESSAGE, submit_time, 5)           \
    X(a, STATIC, SINGULAR, UINT64, group_version, 6)          \
    X(a, STATIC, SINGULAR, UINT64, group_policy_version, 7)   \
    X(a, STATIC, SINGULAR, UENUM, status, 8)                  \
    X(a, STATIC, OPTIONAL, MESSAGE, final_tally_result, 9)    \
    X(a, STATIC, OPTIONAL, MESSAGE, voting_period_end, 10)    \
    X(a, STATIC, SINGULAR, UENUM, executor_result, 11)        \
    X(a, CALLBACK, REPEATED, MESSAGE, messages, 12)           \
    X(a, CALLBACK, SINGULAR, STRING, title, 13)               \
    X(a, CALLBACK, SINGULAR, STRING, summary, 14)
#define cosmos_group_v1_Proposal_CALLBACK pb_default_field_callback
#define cosmos_group_v1_Proposal_DEFAULT NULL
#define cosmos_group_v1_Proposal_submit_time_MSGTYPE google_protobuf_Timestamp
#define cosmos_group_v1_Proposal_final_tally_result_MSGTYPE cosmos_group_v1_TallyResult
#define cosmos_group_v1_Proposal_voting_period_end_MSGTYPE google_protobuf_Timestamp
#define cosmos_group_v1_Proposal_messages_MSGTYPE google_protobuf_Any

#define cosmos_group_v1_TallyResult_FIELDLIST(X, a)    \
    X(a, CALLBACK, SINGULAR, STRING, yes_count, 1)     \
    X(a, CALLBACK, SINGULAR, STRING, abstain_count, 2) \
    X(a, CALLBACK, SINGULAR, STRING, no_count, 3)      \
    X(a, CALLBACK, SINGULAR, STRING, no_with_veto_count, 4)
#define cosmos_group_v1_TallyResult_CALLBACK pb_default_field_callback
#define cosmos_group_v1_TallyResult_DEFAULT NULL

#define cosmos_group_v1_Vote_FIELDLIST(X, a)       \
    X(a, STATIC, SINGULAR, UINT64, proposal_id, 1) \
    X(a, CALLBACK, SINGULAR, STRING, voter, 2)     \
    X(a, STATIC, SINGULAR, UENUM, option, 3)       \
    X(a, CALLBACK, SINGULAR, STRING, metadata, 4)  \
    X(a, STATIC, OPTIONAL, MESSAGE, submit_time, 5)
#define cosmos_group_v1_Vote_CALLBACK pb_default_field_callback
#define cosmos_group_v1_Vote_DEFAULT NULL
#define cosmos_group_v1_Vote_submit_time_MSGTYPE google_protobuf_Timestamp

extern const pb_msgdesc_t cosmos_group_v1_Member_msg;
extern const pb_msgdesc_t cosmos_group_v1_MemberRequest_msg;
extern const pb_msgdesc_t cosmos_group_v1_ThresholdDecisionPolicy_msg;
extern const pb_msgdesc_t cosmos_group_v1_PercentageDecisionPolicy_msg;
extern const pb_msgdesc_t cosmos_group_v1_DecisionPolicyWindows_msg;
extern const pb_msgdesc_t cosmos_group_v1_GroupInfo_msg;
extern const pb_msgdesc_t cosmos_group_v1_GroupMember_msg;
extern const pb_msgdesc_t cosmos_group_v1_GroupPolicyInfo_msg;
extern const pb_msgdesc_t cosmos_group_v1_Proposal_msg;
extern const pb_msgdesc_t cosmos_group_v1_TallyResult_msg;
extern const pb_msgdesc_t cosmos_group_v1_Vote_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cosmos_group_v1_Member_fields &cosmos_group_v1_Member_msg
#define cosmos_group_v1_MemberRequest_fields &cosmos_group_v1_MemberRequest_msg
#define cosmos_group_v1_ThresholdDecisionPolicy_fields &cosmos_group_v1_ThresholdDecisionPolicy_msg
#define cosmos_group_v1_PercentageDecisionPolicy_fields &cosmos_group_v1_PercentageDecisionPolicy_msg
#define cosmos_group_v1_DecisionPolicyWindows_fields &cosmos_group_v1_DecisionPolicyWindows_msg
#define cosmos_group_v1_GroupInfo_fields &cosmos_group_v1_GroupInfo_msg
#define cosmos_group_v1_GroupMember_fields &cosmos_group_v1_GroupMember_msg
#define cosmos_group_v1_GroupPolicyInfo_fields &cosmos_group_v1_GroupPolicyInfo_msg
#define cosmos_group_v1_Proposal_fields &cosmos_group_v1_Proposal_msg
#define cosmos_group_v1_TallyResult_fields &cosmos_group_v1_TallyResult_msg
#define cosmos_group_v1_Vote_fields &cosmos_group_v1_Vote_msg

/* Maximum encoded size of messages (where known) */
/* cosmos_group_v1_Member_size depends on runtime parameters */
/* cosmos_group_v1_MemberRequest_size depends on runtime parameters */
/* cosmos_group_v1_ThresholdDecisionPolicy_size depends on runtime parameters */
/* cosmos_group_v1_PercentageDecisionPolicy_size depends on runtime parameters */
/* cosmos_group_v1_GroupInfo_size depends on runtime parameters */
/* cosmos_group_v1_GroupMember_size depends on runtime parameters */
/* cosmos_group_v1_GroupPolicyInfo_size depends on runtime parameters */
/* cosmos_group_v1_Proposal_size depends on runtime parameters */
/* cosmos_group_v1_TallyResult_size depends on runtime parameters */
/* cosmos_group_v1_Vote_size depends on runtime parameters */
#define COSMOS_GROUP_V1_COSMOS_GROUP_V1_TYPES_PB_H_MAX_SIZE cosmos_group_v1_DecisionPolicyWindows_size
#define cosmos_group_v1_DecisionPolicyWindows_size 48

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
