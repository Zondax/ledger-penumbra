/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_COSMOS_GROUP_V1_COSMOS_GROUP_V1_EVENTS_PB_H_INCLUDED
#define PB_COSMOS_GROUP_V1_COSMOS_GROUP_V1_EVENTS_PB_H_INCLUDED
#include <pb.h>

#include "cosmos/group/v1/types.pb.h"
#include "cosmos_proto/cosmos.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* EventCreateGroup is an event emitted when a group is created. */
typedef struct _cosmos_group_v1_EventCreateGroup {
    /* group_id is the unique ID of the group. */
    uint64_t group_id;
} cosmos_group_v1_EventCreateGroup;

/* EventUpdateGroup is an event emitted when a group is updated. */
typedef struct _cosmos_group_v1_EventUpdateGroup {
    /* group_id is the unique ID of the group. */
    uint64_t group_id;
} cosmos_group_v1_EventUpdateGroup;

/* EventCreateGroupPolicy is an event emitted when a group policy is created. */
typedef struct _cosmos_group_v1_EventCreateGroupPolicy {
    /* address is the account address of the group policy. */
    pb_callback_t address;
} cosmos_group_v1_EventCreateGroupPolicy;

/* EventUpdateGroupPolicy is an event emitted when a group policy is updated. */
typedef struct _cosmos_group_v1_EventUpdateGroupPolicy {
    /* address is the account address of the group policy. */
    pb_callback_t address;
} cosmos_group_v1_EventUpdateGroupPolicy;

/* EventSubmitProposal is an event emitted when a proposal is created. */
typedef struct _cosmos_group_v1_EventSubmitProposal {
    /* proposal_id is the unique ID of the proposal. */
    uint64_t proposal_id;
} cosmos_group_v1_EventSubmitProposal;

/* EventWithdrawProposal is an event emitted when a proposal is withdrawn. */
typedef struct _cosmos_group_v1_EventWithdrawProposal {
    /* proposal_id is the unique ID of the proposal. */
    uint64_t proposal_id;
} cosmos_group_v1_EventWithdrawProposal;

/* EventVote is an event emitted when a voter votes on a proposal. */
typedef struct _cosmos_group_v1_EventVote {
    /* proposal_id is the unique ID of the proposal. */
    uint64_t proposal_id;
} cosmos_group_v1_EventVote;

/* EventExec is an event emitted when a proposal is executed. */
typedef struct _cosmos_group_v1_EventExec {
    /* proposal_id is the unique ID of the proposal. */
    uint64_t proposal_id;
    /* result is the proposal execution result. */
    cosmos_group_v1_ProposalExecutorResult result;
    /* logs contains error logs in case the execution result is FAILURE. */
    pb_callback_t logs;
} cosmos_group_v1_EventExec;

/* EventLeaveGroup is an event emitted when group member leaves the group. */
typedef struct _cosmos_group_v1_EventLeaveGroup {
    /* group_id is the unique ID of the group. */
    uint64_t group_id;
    /* address is the account address of the group member. */
    pb_callback_t address;
} cosmos_group_v1_EventLeaveGroup;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cosmos_group_v1_EventCreateGroup_init_default \
    { 0 }
#define cosmos_group_v1_EventUpdateGroup_init_default \
    { 0 }
#define cosmos_group_v1_EventCreateGroupPolicy_init_default \
    {                                                       \
        { {NULL}, NULL }                                    \
    }
#define cosmos_group_v1_EventUpdateGroupPolicy_init_default \
    {                                                       \
        { {NULL}, NULL }                                    \
    }
#define cosmos_group_v1_EventSubmitProposal_init_default \
    { 0 }
#define cosmos_group_v1_EventWithdrawProposal_init_default \
    { 0 }
#define cosmos_group_v1_EventVote_init_default \
    { 0 }
#define cosmos_group_v1_EventExec_init_default                           \
    {                                                                    \
        0, _cosmos_group_v1_ProposalExecutorResult_MIN, { {NULL}, NULL } \
    }
#define cosmos_group_v1_EventLeaveGroup_init_default \
    {                                                \
        0, { {NULL}, NULL }                          \
    }
#define cosmos_group_v1_EventCreateGroup_init_zero \
    { 0 }
#define cosmos_group_v1_EventUpdateGroup_init_zero \
    { 0 }
#define cosmos_group_v1_EventCreateGroupPolicy_init_zero \
    {                                                    \
        { {NULL}, NULL }                                 \
    }
#define cosmos_group_v1_EventUpdateGroupPolicy_init_zero \
    {                                                    \
        { {NULL}, NULL }                                 \
    }
#define cosmos_group_v1_EventSubmitProposal_init_zero \
    { 0 }
#define cosmos_group_v1_EventWithdrawProposal_init_zero \
    { 0 }
#define cosmos_group_v1_EventVote_init_zero \
    { 0 }
#define cosmos_group_v1_EventExec_init_zero                              \
    {                                                                    \
        0, _cosmos_group_v1_ProposalExecutorResult_MIN, { {NULL}, NULL } \
    }
#define cosmos_group_v1_EventLeaveGroup_init_zero \
    {                                             \
        0, { {NULL}, NULL }                       \
    }

/* Field tags (for use in manual encoding/decoding) */
#define cosmos_group_v1_EventCreateGroup_group_id_tag 1
#define cosmos_group_v1_EventUpdateGroup_group_id_tag 1
#define cosmos_group_v1_EventCreateGroupPolicy_address_tag 1
#define cosmos_group_v1_EventUpdateGroupPolicy_address_tag 1
#define cosmos_group_v1_EventSubmitProposal_proposal_id_tag 1
#define cosmos_group_v1_EventWithdrawProposal_proposal_id_tag 1
#define cosmos_group_v1_EventVote_proposal_id_tag 1
#define cosmos_group_v1_EventExec_proposal_id_tag 1
#define cosmos_group_v1_EventExec_result_tag 2
#define cosmos_group_v1_EventExec_logs_tag 3
#define cosmos_group_v1_EventLeaveGroup_group_id_tag 1
#define cosmos_group_v1_EventLeaveGroup_address_tag 2

/* Struct field encoding specification for nanopb */
#define cosmos_group_v1_EventCreateGroup_FIELDLIST(X, a) X(a, STATIC, SINGULAR, UINT64, group_id, 1)
#define cosmos_group_v1_EventCreateGroup_CALLBACK NULL
#define cosmos_group_v1_EventCreateGroup_DEFAULT NULL

#define cosmos_group_v1_EventUpdateGroup_FIELDLIST(X, a) X(a, STATIC, SINGULAR, UINT64, group_id, 1)
#define cosmos_group_v1_EventUpdateGroup_CALLBACK NULL
#define cosmos_group_v1_EventUpdateGroup_DEFAULT NULL

#define cosmos_group_v1_EventCreateGroupPolicy_FIELDLIST(X, a) X(a, CALLBACK, SINGULAR, STRING, address, 1)
#define cosmos_group_v1_EventCreateGroupPolicy_CALLBACK pb_default_field_callback
#define cosmos_group_v1_EventCreateGroupPolicy_DEFAULT NULL

#define cosmos_group_v1_EventUpdateGroupPolicy_FIELDLIST(X, a) X(a, CALLBACK, SINGULAR, STRING, address, 1)
#define cosmos_group_v1_EventUpdateGroupPolicy_CALLBACK pb_default_field_callback
#define cosmos_group_v1_EventUpdateGroupPolicy_DEFAULT NULL

#define cosmos_group_v1_EventSubmitProposal_FIELDLIST(X, a) X(a, STATIC, SINGULAR, UINT64, proposal_id, 1)
#define cosmos_group_v1_EventSubmitProposal_CALLBACK NULL
#define cosmos_group_v1_EventSubmitProposal_DEFAULT NULL

#define cosmos_group_v1_EventWithdrawProposal_FIELDLIST(X, a) X(a, STATIC, SINGULAR, UINT64, proposal_id, 1)
#define cosmos_group_v1_EventWithdrawProposal_CALLBACK NULL
#define cosmos_group_v1_EventWithdrawProposal_DEFAULT NULL

#define cosmos_group_v1_EventVote_FIELDLIST(X, a) X(a, STATIC, SINGULAR, UINT64, proposal_id, 1)
#define cosmos_group_v1_EventVote_CALLBACK NULL
#define cosmos_group_v1_EventVote_DEFAULT NULL

#define cosmos_group_v1_EventExec_FIELDLIST(X, a)  \
    X(a, STATIC, SINGULAR, UINT64, proposal_id, 1) \
    X(a, STATIC, SINGULAR, UENUM, result, 2)       \
    X(a, CALLBACK, SINGULAR, STRING, logs, 3)
#define cosmos_group_v1_EventExec_CALLBACK pb_default_field_callback
#define cosmos_group_v1_EventExec_DEFAULT NULL

#define cosmos_group_v1_EventLeaveGroup_FIELDLIST(X, a) \
    X(a, STATIC, SINGULAR, UINT64, group_id, 1)         \
    X(a, CALLBACK, SINGULAR, STRING, address, 2)
#define cosmos_group_v1_EventLeaveGroup_CALLBACK pb_default_field_callback
#define cosmos_group_v1_EventLeaveGroup_DEFAULT NULL

extern const pb_msgdesc_t cosmos_group_v1_EventCreateGroup_msg;
extern const pb_msgdesc_t cosmos_group_v1_EventUpdateGroup_msg;
extern const pb_msgdesc_t cosmos_group_v1_EventCreateGroupPolicy_msg;
extern const pb_msgdesc_t cosmos_group_v1_EventUpdateGroupPolicy_msg;
extern const pb_msgdesc_t cosmos_group_v1_EventSubmitProposal_msg;
extern const pb_msgdesc_t cosmos_group_v1_EventWithdrawProposal_msg;
extern const pb_msgdesc_t cosmos_group_v1_EventVote_msg;
extern const pb_msgdesc_t cosmos_group_v1_EventExec_msg;
extern const pb_msgdesc_t cosmos_group_v1_EventLeaveGroup_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cosmos_group_v1_EventCreateGroup_fields &cosmos_group_v1_EventCreateGroup_msg
#define cosmos_group_v1_EventUpdateGroup_fields &cosmos_group_v1_EventUpdateGroup_msg
#define cosmos_group_v1_EventCreateGroupPolicy_fields &cosmos_group_v1_EventCreateGroupPolicy_msg
#define cosmos_group_v1_EventUpdateGroupPolicy_fields &cosmos_group_v1_EventUpdateGroupPolicy_msg
#define cosmos_group_v1_EventSubmitProposal_fields &cosmos_group_v1_EventSubmitProposal_msg
#define cosmos_group_v1_EventWithdrawProposal_fields &cosmos_group_v1_EventWithdrawProposal_msg
#define cosmos_group_v1_EventVote_fields &cosmos_group_v1_EventVote_msg
#define cosmos_group_v1_EventExec_fields &cosmos_group_v1_EventExec_msg
#define cosmos_group_v1_EventLeaveGroup_fields &cosmos_group_v1_EventLeaveGroup_msg

/* Maximum encoded size of messages (where known) */
/* cosmos_group_v1_EventCreateGroupPolicy_size depends on runtime parameters */
/* cosmos_group_v1_EventUpdateGroupPolicy_size depends on runtime parameters */
/* cosmos_group_v1_EventExec_size depends on runtime parameters */
/* cosmos_group_v1_EventLeaveGroup_size depends on runtime parameters */
#define COSMOS_GROUP_V1_COSMOS_GROUP_V1_EVENTS_PB_H_MAX_SIZE cosmos_group_v1_EventCreateGroup_size
#define cosmos_group_v1_EventCreateGroup_size 11
#define cosmos_group_v1_EventSubmitProposal_size 11
#define cosmos_group_v1_EventUpdateGroup_size 11
#define cosmos_group_v1_EventVote_size 11
#define cosmos_group_v1_EventWithdrawProposal_size 11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
