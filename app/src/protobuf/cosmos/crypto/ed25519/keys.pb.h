/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_COSMOS_CRYPTO_ED25519_COSMOS_CRYPTO_ED25519_KEYS_PB_H_INCLUDED
#define PB_COSMOS_CRYPTO_ED25519_COSMOS_CRYPTO_ED25519_KEYS_PB_H_INCLUDED
#include <pb.h>

#include "amino/amino.pb.h"
#include "gogoproto/gogo.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* PubKey is an ed25519 public key for handling Tendermint keys in SDK.
 It's needed for Any serialization and SDK compatibility.
 It must not be used in a non Tendermint key context because it doesn't implement
 ADR-28. Nevertheless, you will like to use ed25519 in app user level
 then you must create a new proto message and follow ADR-28 for Address construction. */
typedef struct _cosmos_crypto_ed25519_PubKey {
    pb_callback_t key;
} cosmos_crypto_ed25519_PubKey;

/* PrivKey defines a ed25519 private key.
 NOTE: ed25519 keys must not be used in SDK apps except in a tendermint validator context. */
typedef struct _cosmos_crypto_ed25519_PrivKey {
    pb_callback_t key;
} cosmos_crypto_ed25519_PrivKey;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define cosmos_crypto_ed25519_PubKey_init_default \
    {                                             \
        { {NULL}, NULL }                          \
    }
#define cosmos_crypto_ed25519_PrivKey_init_default \
    {                                              \
        { {NULL}, NULL }                           \
    }
#define cosmos_crypto_ed25519_PubKey_init_zero \
    {                                          \
        { {NULL}, NULL }                       \
    }
#define cosmos_crypto_ed25519_PrivKey_init_zero \
    {                                           \
        { {NULL}, NULL }                        \
    }

/* Field tags (for use in manual encoding/decoding) */
#define cosmos_crypto_ed25519_PubKey_key_tag 1
#define cosmos_crypto_ed25519_PrivKey_key_tag 1

/* Struct field encoding specification for nanopb */
#define cosmos_crypto_ed25519_PubKey_FIELDLIST(X, a) X(a, CALLBACK, SINGULAR, BYTES, key, 1)
#define cosmos_crypto_ed25519_PubKey_CALLBACK pb_default_field_callback
#define cosmos_crypto_ed25519_PubKey_DEFAULT NULL

#define cosmos_crypto_ed25519_PrivKey_FIELDLIST(X, a) X(a, CALLBACK, SINGULAR, BYTES, key, 1)
#define cosmos_crypto_ed25519_PrivKey_CALLBACK pb_default_field_callback
#define cosmos_crypto_ed25519_PrivKey_DEFAULT NULL

extern const pb_msgdesc_t cosmos_crypto_ed25519_PubKey_msg;
extern const pb_msgdesc_t cosmos_crypto_ed25519_PrivKey_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define cosmos_crypto_ed25519_PubKey_fields &cosmos_crypto_ed25519_PubKey_msg
#define cosmos_crypto_ed25519_PrivKey_fields &cosmos_crypto_ed25519_PrivKey_msg

/* Maximum encoded size of messages (where known) */
/* cosmos_crypto_ed25519_PubKey_size depends on runtime parameters */
/* cosmos_crypto_ed25519_PrivKey_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
