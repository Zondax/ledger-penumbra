/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_IBC_APPLICATIONS_FEE_V1_IBC_APPLICATIONS_FEE_V1_GENESIS_PB_H_INCLUDED
#define PB_IBC_APPLICATIONS_FEE_V1_IBC_APPLICATIONS_FEE_V1_GENESIS_PB_H_INCLUDED
#include <pb.h>

#include "gogoproto/gogo.pb.h"
#include "ibc/applications/fee/v1/fee.pb.h"
#include "ibc/core/channel/v1/channel.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* GenesisState defines the ICS29 fee middleware genesis state */
typedef struct _ibc_applications_fee_v1_GenesisState {
    /* list of identified packet fees */
    pb_callback_t identified_fees;
    /* list of fee enabled channels */
    pb_callback_t fee_enabled_channels;
    /* list of registered payees */
    pb_callback_t registered_payees;
    /* list of registered counterparty payees */
    pb_callback_t registered_counterparty_payees;
    /* list of forward relayer addresses */
    pb_callback_t forward_relayers;
} ibc_applications_fee_v1_GenesisState;

/* FeeEnabledChannel contains the PortID & ChannelID for a fee enabled channel */
typedef struct _ibc_applications_fee_v1_FeeEnabledChannel {
    /* unique port identifier */
    pb_callback_t port_id;
    /* unique channel identifier */
    pb_callback_t channel_id;
} ibc_applications_fee_v1_FeeEnabledChannel;

/* RegisteredPayee contains the relayer address and payee address for a specific channel */
typedef struct _ibc_applications_fee_v1_RegisteredPayee {
    /* unique channel identifier */
    pb_callback_t channel_id;
    /* the relayer address */
    pb_callback_t relayer;
    /* the payee address */
    pb_callback_t payee;
} ibc_applications_fee_v1_RegisteredPayee;

/* RegisteredCounterpartyPayee contains the relayer address and counterparty payee address for a specific channel (used
 for recv fee distribution) */
typedef struct _ibc_applications_fee_v1_RegisteredCounterpartyPayee {
    /* unique channel identifier */
    pb_callback_t channel_id;
    /* the relayer address */
    pb_callback_t relayer;
    /* the counterparty payee address */
    pb_callback_t counterparty_payee;
} ibc_applications_fee_v1_RegisteredCounterpartyPayee;

/* ForwardRelayerAddress contains the forward relayer address and PacketId used for async acknowledgements */
typedef struct _ibc_applications_fee_v1_ForwardRelayerAddress {
    /* the forward relayer address */
    pb_callback_t address;
    /* unique packet identifer comprised of the channel ID, port ID and sequence */
    bool has_packet_id;
    ibc_core_channel_v1_PacketId packet_id;
} ibc_applications_fee_v1_ForwardRelayerAddress;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ibc_applications_fee_v1_GenesisState_init_default                                \
    {                                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define ibc_applications_fee_v1_FeeEnabledChannel_init_default \
    {                                                          \
        {{NULL}, NULL}, { {NULL}, NULL }                       \
    }
#define ibc_applications_fee_v1_RegisteredPayee_init_default \
    {                                                        \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL }     \
    }
#define ibc_applications_fee_v1_RegisteredCounterpartyPayee_init_default \
    {                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL }                 \
    }
#define ibc_applications_fee_v1_ForwardRelayerAddress_init_default \
    { {{NULL}, NULL}, false, ibc_core_channel_v1_PacketId_init_default }
#define ibc_applications_fee_v1_GenesisState_init_zero                                   \
    {                                                                                    \
        {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define ibc_applications_fee_v1_FeeEnabledChannel_init_zero \
    {                                                       \
        {{NULL}, NULL}, { {NULL}, NULL }                    \
    }
#define ibc_applications_fee_v1_RegisteredPayee_init_zero \
    {                                                     \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL }  \
    }
#define ibc_applications_fee_v1_RegisteredCounterpartyPayee_init_zero \
    {                                                                 \
        {{NULL}, NULL}, {{NULL}, NULL}, { {NULL}, NULL }              \
    }
#define ibc_applications_fee_v1_ForwardRelayerAddress_init_zero \
    { {{NULL}, NULL}, false, ibc_core_channel_v1_PacketId_init_zero }

/* Field tags (for use in manual encoding/decoding) */
#define ibc_applications_fee_v1_GenesisState_identified_fees_tag 1
#define ibc_applications_fee_v1_GenesisState_fee_enabled_channels_tag 2
#define ibc_applications_fee_v1_GenesisState_registered_payees_tag 3
#define ibc_applications_fee_v1_GenesisState_registered_counterparty_payees_tag 4
#define ibc_applications_fee_v1_GenesisState_forward_relayers_tag 5
#define ibc_applications_fee_v1_FeeEnabledChannel_port_id_tag 1
#define ibc_applications_fee_v1_FeeEnabledChannel_channel_id_tag 2
#define ibc_applications_fee_v1_RegisteredPayee_channel_id_tag 1
#define ibc_applications_fee_v1_RegisteredPayee_relayer_tag 2
#define ibc_applications_fee_v1_RegisteredPayee_payee_tag 3
#define ibc_applications_fee_v1_RegisteredCounterpartyPayee_channel_id_tag 1
#define ibc_applications_fee_v1_RegisteredCounterpartyPayee_relayer_tag 2
#define ibc_applications_fee_v1_RegisteredCounterpartyPayee_counterparty_payee_tag 3
#define ibc_applications_fee_v1_ForwardRelayerAddress_address_tag 1
#define ibc_applications_fee_v1_ForwardRelayerAddress_packet_id_tag 2

/* Struct field encoding specification for nanopb */
#define ibc_applications_fee_v1_GenesisState_FIELDLIST(X, a)             \
    X(a, CALLBACK, REPEATED, MESSAGE, identified_fees, 1)                \
    X(a, CALLBACK, REPEATED, MESSAGE, fee_enabled_channels, 2)           \
    X(a, CALLBACK, REPEATED, MESSAGE, registered_payees, 3)              \
    X(a, CALLBACK, REPEATED, MESSAGE, registered_counterparty_payees, 4) \
    X(a, CALLBACK, REPEATED, MESSAGE, forward_relayers, 5)
#define ibc_applications_fee_v1_GenesisState_CALLBACK pb_default_field_callback
#define ibc_applications_fee_v1_GenesisState_DEFAULT NULL
#define ibc_applications_fee_v1_GenesisState_identified_fees_MSGTYPE ibc_applications_fee_v1_IdentifiedPacketFees
#define ibc_applications_fee_v1_GenesisState_fee_enabled_channels_MSGTYPE ibc_applications_fee_v1_FeeEnabledChannel
#define ibc_applications_fee_v1_GenesisState_registered_payees_MSGTYPE ibc_applications_fee_v1_RegisteredPayee
#define ibc_applications_fee_v1_GenesisState_registered_counterparty_payees_MSGTYPE \
    ibc_applications_fee_v1_RegisteredCounterpartyPayee
#define ibc_applications_fee_v1_GenesisState_forward_relayers_MSGTYPE ibc_applications_fee_v1_ForwardRelayerAddress

#define ibc_applications_fee_v1_FeeEnabledChannel_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, port_id, 1)                  \
    X(a, CALLBACK, SINGULAR, STRING, channel_id, 2)
#define ibc_applications_fee_v1_FeeEnabledChannel_CALLBACK pb_default_field_callback
#define ibc_applications_fee_v1_FeeEnabledChannel_DEFAULT NULL

#define ibc_applications_fee_v1_RegisteredPayee_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, channel_id, 1)             \
    X(a, CALLBACK, SINGULAR, STRING, relayer, 2)                \
    X(a, CALLBACK, SINGULAR, STRING, payee, 3)
#define ibc_applications_fee_v1_RegisteredPayee_CALLBACK pb_default_field_callback
#define ibc_applications_fee_v1_RegisteredPayee_DEFAULT NULL

#define ibc_applications_fee_v1_RegisteredCounterpartyPayee_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, channel_id, 1)                         \
    X(a, CALLBACK, SINGULAR, STRING, relayer, 2)                            \
    X(a, CALLBACK, SINGULAR, STRING, counterparty_payee, 3)
#define ibc_applications_fee_v1_RegisteredCounterpartyPayee_CALLBACK pb_default_field_callback
#define ibc_applications_fee_v1_RegisteredCounterpartyPayee_DEFAULT NULL

#define ibc_applications_fee_v1_ForwardRelayerAddress_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, address, 1)                      \
    X(a, STATIC, OPTIONAL, MESSAGE, packet_id, 2)
#define ibc_applications_fee_v1_ForwardRelayerAddress_CALLBACK pb_default_field_callback
#define ibc_applications_fee_v1_ForwardRelayerAddress_DEFAULT NULL
#define ibc_applications_fee_v1_ForwardRelayerAddress_packet_id_MSGTYPE ibc_core_channel_v1_PacketId

extern const pb_msgdesc_t ibc_applications_fee_v1_GenesisState_msg;
extern const pb_msgdesc_t ibc_applications_fee_v1_FeeEnabledChannel_msg;
extern const pb_msgdesc_t ibc_applications_fee_v1_RegisteredPayee_msg;
extern const pb_msgdesc_t ibc_applications_fee_v1_RegisteredCounterpartyPayee_msg;
extern const pb_msgdesc_t ibc_applications_fee_v1_ForwardRelayerAddress_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ibc_applications_fee_v1_GenesisState_fields &ibc_applications_fee_v1_GenesisState_msg
#define ibc_applications_fee_v1_FeeEnabledChannel_fields &ibc_applications_fee_v1_FeeEnabledChannel_msg
#define ibc_applications_fee_v1_RegisteredPayee_fields &ibc_applications_fee_v1_RegisteredPayee_msg
#define ibc_applications_fee_v1_RegisteredCounterpartyPayee_fields &ibc_applications_fee_v1_RegisteredCounterpartyPayee_msg
#define ibc_applications_fee_v1_ForwardRelayerAddress_fields &ibc_applications_fee_v1_ForwardRelayerAddress_msg

/* Maximum encoded size of messages (where known) */
/* ibc_applications_fee_v1_GenesisState_size depends on runtime parameters */
/* ibc_applications_fee_v1_FeeEnabledChannel_size depends on runtime parameters */
/* ibc_applications_fee_v1_RegisteredPayee_size depends on runtime parameters */
/* ibc_applications_fee_v1_RegisteredCounterpartyPayee_size depends on runtime parameters */
/* ibc_applications_fee_v1_ForwardRelayerAddress_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
