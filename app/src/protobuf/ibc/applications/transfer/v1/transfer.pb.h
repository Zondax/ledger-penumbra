/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_IBC_APPLICATIONS_TRANSFER_V1_IBC_APPLICATIONS_TRANSFER_V1_TRANSFER_PB_H_INCLUDED
#define PB_IBC_APPLICATIONS_TRANSFER_V1_IBC_APPLICATIONS_TRANSFER_V1_TRANSFER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* DenomTrace contains the base denomination for ICS20 fungible tokens and the
 source tracing information path. */
typedef struct _ibc_applications_transfer_v1_DenomTrace {
    /* path defines the chain of port/channel identifiers used for tracing the
 source of the fungible token. */
    pb_callback_t path;
    /* base denomination of the relayed fungible token. */
    pb_callback_t base_denom;
} ibc_applications_transfer_v1_DenomTrace;

/* Params defines the set of IBC transfer parameters.
 NOTE: To prevent a single token from being transferred, set the
 TransfersEnabled parameter to true and then set the bank module's SendEnabled
 parameter for the denomination to false. */
typedef struct _ibc_applications_transfer_v1_Params {
    /* send_enabled enables or disables all cross-chain token transfers from this
 chain. */
    bool send_enabled;
    /* receive_enabled enables or disables all cross-chain token transfers to this
 chain. */
    bool receive_enabled;
} ibc_applications_transfer_v1_Params;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ibc_applications_transfer_v1_DenomTrace_init_default \
    {                                                        \
        {{NULL}, NULL}, { {NULL}, NULL }                     \
    }
#define ibc_applications_transfer_v1_Params_init_default \
    { 0, 0 }
#define ibc_applications_transfer_v1_DenomTrace_init_zero \
    {                                                     \
        {{NULL}, NULL}, { {NULL}, NULL }                  \
    }
#define ibc_applications_transfer_v1_Params_init_zero \
    { 0, 0 }

/* Field tags (for use in manual encoding/decoding) */
#define ibc_applications_transfer_v1_DenomTrace_path_tag 1
#define ibc_applications_transfer_v1_DenomTrace_base_denom_tag 2
#define ibc_applications_transfer_v1_Params_send_enabled_tag 1
#define ibc_applications_transfer_v1_Params_receive_enabled_tag 2

/* Struct field encoding specification for nanopb */
#define ibc_applications_transfer_v1_DenomTrace_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, STRING, path, 1)                   \
    X(a, CALLBACK, SINGULAR, STRING, base_denom, 2)
#define ibc_applications_transfer_v1_DenomTrace_CALLBACK pb_default_field_callback
#define ibc_applications_transfer_v1_DenomTrace_DEFAULT NULL

#define ibc_applications_transfer_v1_Params_FIELDLIST(X, a) \
    X(a, STATIC, SINGULAR, BOOL, send_enabled, 1)           \
    X(a, STATIC, SINGULAR, BOOL, receive_enabled, 2)
#define ibc_applications_transfer_v1_Params_CALLBACK NULL
#define ibc_applications_transfer_v1_Params_DEFAULT NULL

extern const pb_msgdesc_t ibc_applications_transfer_v1_DenomTrace_msg;
extern const pb_msgdesc_t ibc_applications_transfer_v1_Params_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ibc_applications_transfer_v1_DenomTrace_fields &ibc_applications_transfer_v1_DenomTrace_msg
#define ibc_applications_transfer_v1_Params_fields &ibc_applications_transfer_v1_Params_msg

/* Maximum encoded size of messages (where known) */
/* ibc_applications_transfer_v1_DenomTrace_size depends on runtime parameters */
#define IBC_APPLICATIONS_TRANSFER_V1_IBC_APPLICATIONS_TRANSFER_V1_TRANSFER_PB_H_MAX_SIZE \
    ibc_applications_transfer_v1_Params_size
#define ibc_applications_transfer_v1_Params_size 4

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
