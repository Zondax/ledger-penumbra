/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_IBC_LIGHTCLIENTS_LOCALHOST_V2_IBC_LIGHTCLIENTS_LOCALHOST_V2_LOCALHOST_PB_H_INCLUDED
#define PB_IBC_LIGHTCLIENTS_LOCALHOST_V2_IBC_LIGHTCLIENTS_LOCALHOST_V2_LOCALHOST_PB_H_INCLUDED
#include <pb.h>

#include "gogoproto/gogo.pb.h"
#include "ibc/core/client/v1/client.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* ClientState defines the 09-localhost client state */
typedef struct _ibc_lightclients_localhost_v2_ClientState {
    /* the latest block height */
    bool has_latest_height;
    ibc_core_client_v1_Height latest_height;
} ibc_lightclients_localhost_v2_ClientState;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ibc_lightclients_localhost_v2_ClientState_init_default \
    { false, ibc_core_client_v1_Height_init_default }
#define ibc_lightclients_localhost_v2_ClientState_init_zero \
    { false, ibc_core_client_v1_Height_init_zero }

/* Field tags (for use in manual encoding/decoding) */
#define ibc_lightclients_localhost_v2_ClientState_latest_height_tag 1

/* Struct field encoding specification for nanopb */
#define ibc_lightclients_localhost_v2_ClientState_FIELDLIST(X, a) X(a, STATIC, OPTIONAL, MESSAGE, latest_height, 1)
#define ibc_lightclients_localhost_v2_ClientState_CALLBACK NULL
#define ibc_lightclients_localhost_v2_ClientState_DEFAULT NULL
#define ibc_lightclients_localhost_v2_ClientState_latest_height_MSGTYPE ibc_core_client_v1_Height

extern const pb_msgdesc_t ibc_lightclients_localhost_v2_ClientState_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ibc_lightclients_localhost_v2_ClientState_fields &ibc_lightclients_localhost_v2_ClientState_msg

/* Maximum encoded size of messages (where known) */
#define IBC_LIGHTCLIENTS_LOCALHOST_V2_IBC_LIGHTCLIENTS_LOCALHOST_V2_LOCALHOST_PB_H_MAX_SIZE \
    ibc_lightclients_localhost_v2_ClientState_size
#define ibc_lightclients_localhost_v2_ClientState_size 24

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
