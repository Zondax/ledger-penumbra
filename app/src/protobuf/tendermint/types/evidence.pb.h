/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_TENDERMINT_TYPES_TENDERMINT_TYPES_EVIDENCE_PB_H_INCLUDED
#define PB_TENDERMINT_TYPES_TENDERMINT_TYPES_EVIDENCE_PB_H_INCLUDED
#include <pb.h>

#include "gogoproto/gogo.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "tendermint/types/types.pb.h"
#include "tendermint/types/validator.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
typedef struct _tendermint_types_DuplicateVoteEvidence {
    bool has_vote_a;
    tendermint_types_Vote vote_a;
    bool has_vote_b;
    tendermint_types_Vote vote_b;
    int64_t total_voting_power;
    int64_t validator_power;
    bool has_timestamp;
    google_protobuf_Timestamp timestamp;
} tendermint_types_DuplicateVoteEvidence;

/* LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
typedef struct _tendermint_types_LightClientAttackEvidence {
    bool has_conflicting_block;
    tendermint_types_LightBlock conflicting_block;
    int64_t common_height;
    pb_callback_t byzantine_validators;
    int64_t total_voting_power;
    bool has_timestamp;
    google_protobuf_Timestamp timestamp;
} tendermint_types_LightClientAttackEvidence;

typedef struct _tendermint_types_Evidence {
    pb_size_t which_sum;
    union {
        tendermint_types_DuplicateVoteEvidence duplicate_vote_evidence;
        tendermint_types_LightClientAttackEvidence light_client_attack_evidence;
    } sum;
} tendermint_types_Evidence;

typedef struct _tendermint_types_EvidenceList {
    pb_callback_t evidence;
} tendermint_types_EvidenceList;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define tendermint_types_Evidence_init_default                     \
    {                                                              \
        0, { tendermint_types_DuplicateVoteEvidence_init_default } \
    }
#define tendermint_types_DuplicateVoteEvidence_init_default                                                \
    {                                                                                                      \
        false, tendermint_types_Vote_init_default, false, tendermint_types_Vote_init_default, 0, 0, false, \
            google_protobuf_Timestamp_init_default                                                         \
    }
#define tendermint_types_LightClientAttackEvidence_init_default \
    { false, tendermint_types_LightBlock_init_default, 0, {{NULL}, NULL}, 0, false, google_protobuf_Timestamp_init_default }
#define tendermint_types_EvidenceList_init_default \
    {                                              \
        { {NULL}, NULL }                           \
    }
#define tendermint_types_Evidence_init_zero                     \
    {                                                           \
        0, { tendermint_types_DuplicateVoteEvidence_init_zero } \
    }
#define tendermint_types_DuplicateVoteEvidence_init_zero                                             \
    {                                                                                                \
        false, tendermint_types_Vote_init_zero, false, tendermint_types_Vote_init_zero, 0, 0, false, \
            google_protobuf_Timestamp_init_zero                                                      \
    }
#define tendermint_types_LightClientAttackEvidence_init_zero \
    { false, tendermint_types_LightBlock_init_zero, 0, {{NULL}, NULL}, 0, false, google_protobuf_Timestamp_init_zero }
#define tendermint_types_EvidenceList_init_zero \
    {                                           \
        { {NULL}, NULL }                        \
    }

/* Field tags (for use in manual encoding/decoding) */
#define tendermint_types_DuplicateVoteEvidence_vote_a_tag 1
#define tendermint_types_DuplicateVoteEvidence_vote_b_tag 2
#define tendermint_types_DuplicateVoteEvidence_total_voting_power_tag 3
#define tendermint_types_DuplicateVoteEvidence_validator_power_tag 4
#define tendermint_types_DuplicateVoteEvidence_timestamp_tag 5
#define tendermint_types_LightClientAttackEvidence_conflicting_block_tag 1
#define tendermint_types_LightClientAttackEvidence_common_height_tag 2
#define tendermint_types_LightClientAttackEvidence_byzantine_validators_tag 3
#define tendermint_types_LightClientAttackEvidence_total_voting_power_tag 4
#define tendermint_types_LightClientAttackEvidence_timestamp_tag 5
#define tendermint_types_Evidence_duplicate_vote_evidence_tag 1
#define tendermint_types_Evidence_light_client_attack_evidence_tag 2
#define tendermint_types_EvidenceList_evidence_tag 1

/* Struct field encoding specification for nanopb */
#define tendermint_types_Evidence_FIELDLIST(X, a)                                                \
    X(a, STATIC, ONEOF, MESSAGE, (sum, duplicate_vote_evidence, sum.duplicate_vote_evidence), 1) \
    X(a, STATIC, ONEOF, MESSAGE, (sum, light_client_attack_evidence, sum.light_client_attack_evidence), 2)
#define tendermint_types_Evidence_CALLBACK NULL
#define tendermint_types_Evidence_DEFAULT NULL
#define tendermint_types_Evidence_sum_duplicate_vote_evidence_MSGTYPE tendermint_types_DuplicateVoteEvidence
#define tendermint_types_Evidence_sum_light_client_attack_evidence_MSGTYPE tendermint_types_LightClientAttackEvidence

#define tendermint_types_DuplicateVoteEvidence_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, vote_a, 1)                 \
    X(a, STATIC, OPTIONAL, MESSAGE, vote_b, 2)                 \
    X(a, STATIC, SINGULAR, INT64, total_voting_power, 3)       \
    X(a, STATIC, SINGULAR, INT64, validator_power, 4)          \
    X(a, STATIC, OPTIONAL, MESSAGE, timestamp, 5)
#define tendermint_types_DuplicateVoteEvidence_CALLBACK NULL
#define tendermint_types_DuplicateVoteEvidence_DEFAULT NULL
#define tendermint_types_DuplicateVoteEvidence_vote_a_MSGTYPE tendermint_types_Vote
#define tendermint_types_DuplicateVoteEvidence_vote_b_MSGTYPE tendermint_types_Vote
#define tendermint_types_DuplicateVoteEvidence_timestamp_MSGTYPE google_protobuf_Timestamp

#define tendermint_types_LightClientAttackEvidence_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, conflicting_block, 1)          \
    X(a, STATIC, SINGULAR, INT64, common_height, 2)                \
    X(a, CALLBACK, REPEATED, MESSAGE, byzantine_validators, 3)     \
    X(a, STATIC, SINGULAR, INT64, total_voting_power, 4)           \
    X(a, STATIC, OPTIONAL, MESSAGE, timestamp, 5)
#define tendermint_types_LightClientAttackEvidence_CALLBACK pb_default_field_callback
#define tendermint_types_LightClientAttackEvidence_DEFAULT NULL
#define tendermint_types_LightClientAttackEvidence_conflicting_block_MSGTYPE tendermint_types_LightBlock
#define tendermint_types_LightClientAttackEvidence_byzantine_validators_MSGTYPE tendermint_types_Validator
#define tendermint_types_LightClientAttackEvidence_timestamp_MSGTYPE google_protobuf_Timestamp

#define tendermint_types_EvidenceList_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, evidence, 1)
#define tendermint_types_EvidenceList_CALLBACK pb_default_field_callback
#define tendermint_types_EvidenceList_DEFAULT NULL
#define tendermint_types_EvidenceList_evidence_MSGTYPE tendermint_types_Evidence

extern const pb_msgdesc_t tendermint_types_Evidence_msg;
extern const pb_msgdesc_t tendermint_types_DuplicateVoteEvidence_msg;
extern const pb_msgdesc_t tendermint_types_LightClientAttackEvidence_msg;
extern const pb_msgdesc_t tendermint_types_EvidenceList_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define tendermint_types_Evidence_fields &tendermint_types_Evidence_msg
#define tendermint_types_DuplicateVoteEvidence_fields &tendermint_types_DuplicateVoteEvidence_msg
#define tendermint_types_LightClientAttackEvidence_fields &tendermint_types_LightClientAttackEvidence_msg
#define tendermint_types_EvidenceList_fields &tendermint_types_EvidenceList_msg

/* Maximum encoded size of messages (where known) */
/* tendermint_types_Evidence_size depends on runtime parameters */
/* tendermint_types_LightClientAttackEvidence_size depends on runtime parameters */
/* tendermint_types_EvidenceList_size depends on runtime parameters */
#if defined(tendermint_types_Vote_size) && defined(tendermint_types_Vote_size)
#define TENDERMINT_TYPES_TENDERMINT_TYPES_EVIDENCE_PB_H_MAX_SIZE tendermint_types_DuplicateVoteEvidence_size
#define tendermint_types_DuplicateVoteEvidence_size (58 + tendermint_types_Vote_size + tendermint_types_Vote_size)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
