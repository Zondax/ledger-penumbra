/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_TENDERMINT_TYPES_TENDERMINT_TYPES_BLOCK_PB_H_INCLUDED
#define PB_TENDERMINT_TYPES_TENDERMINT_TYPES_BLOCK_PB_H_INCLUDED
#include <pb.h>

#include "gogoproto/gogo.pb.h"
#include "tendermint/types/evidence.pb.h"
#include "tendermint/types/types.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _tendermint_types_Block {
    bool has_header;
    tendermint_types_Header header;
    bool has_data;
    tendermint_types_Data data;
    bool has_evidence;
    tendermint_types_EvidenceList evidence;
    bool has_last_commit;
    tendermint_types_Commit last_commit;
} tendermint_types_Block;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define tendermint_types_Block_init_default                                                            \
    {                                                                                                  \
        false, tendermint_types_Header_init_default, false, tendermint_types_Data_init_default, false, \
            tendermint_types_EvidenceList_init_default, false, tendermint_types_Commit_init_default    \
    }
#define tendermint_types_Block_init_zero                                                         \
    {                                                                                            \
        false, tendermint_types_Header_init_zero, false, tendermint_types_Data_init_zero, false, \
            tendermint_types_EvidenceList_init_zero, false, tendermint_types_Commit_init_zero    \
    }

/* Field tags (for use in manual encoding/decoding) */
#define tendermint_types_Block_header_tag 1
#define tendermint_types_Block_data_tag 2
#define tendermint_types_Block_evidence_tag 3
#define tendermint_types_Block_last_commit_tag 4

/* Struct field encoding specification for nanopb */
#define tendermint_types_Block_FIELDLIST(X, a)   \
    X(a, STATIC, OPTIONAL, MESSAGE, header, 1)   \
    X(a, STATIC, OPTIONAL, MESSAGE, data, 2)     \
    X(a, STATIC, OPTIONAL, MESSAGE, evidence, 3) \
    X(a, STATIC, OPTIONAL, MESSAGE, last_commit, 4)
#define tendermint_types_Block_CALLBACK NULL
#define tendermint_types_Block_DEFAULT NULL
#define tendermint_types_Block_header_MSGTYPE tendermint_types_Header
#define tendermint_types_Block_data_MSGTYPE tendermint_types_Data
#define tendermint_types_Block_evidence_MSGTYPE tendermint_types_EvidenceList
#define tendermint_types_Block_last_commit_MSGTYPE tendermint_types_Commit

extern const pb_msgdesc_t tendermint_types_Block_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define tendermint_types_Block_fields &tendermint_types_Block_msg

/* Maximum encoded size of messages (where known) */
#if defined(tendermint_types_Header_size) && defined(tendermint_types_Data_size) && \
    defined(tendermint_types_EvidenceList_size) && defined(tendermint_types_Commit_size)
#define TENDERMINT_TYPES_TENDERMINT_TYPES_BLOCK_PB_H_MAX_SIZE tendermint_types_Block_size
#define tendermint_types_Block_size                                                                        \
    (24 + tendermint_types_Header_size + tendermint_types_Data_size + tendermint_types_EvidenceList_size + \
     tendermint_types_Commit_size)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
