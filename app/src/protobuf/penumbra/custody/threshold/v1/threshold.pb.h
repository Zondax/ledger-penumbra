/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_PENUMBRA_CUSTODY_THRESHOLD_V1_PENUMBRA_CUSTODY_THRESHOLD_V1_THRESHOLD_PB_H_INCLUDED
#define PB_PENUMBRA_CUSTODY_THRESHOLD_V1_PENUMBRA_CUSTODY_THRESHOLD_V1_THRESHOLD_PB_H_INCLUDED
#include <pb.h>

#include "penumbra/core/component/governance/v1/governance.pb.h"
#include "penumbra/core/component/stake/v1/stake.pb.h"
#include "penumbra/core/transaction/v1/transaction.pb.h"
#include "penumbra/crypto/decaf377_frost/v1/decaf377_frost.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* A key one can use to verify signatures.

 This key can also serve as a unique identifier for users. */
typedef struct _penumbra_custody_threshold_v1_VerificationKey {
    pb_callback_t inner;
} penumbra_custody_threshold_v1_VerificationKey;

/* A signature proving that a message was created by the owner of a verification key. */
typedef struct _penumbra_custody_threshold_v1_Signature {
    pb_callback_t inner;
} penumbra_custody_threshold_v1_Signature;

/* The message the coordinator sends in round 1 of the signing protocol. */
typedef struct _penumbra_custody_threshold_v1_CoordinatorRound1 {
    pb_size_t which_request;
    union {
        /* The plan that the coordinator would like the followers to sign. */
        penumbra_core_transaction_v1_TransactionPlan plan;
        /* The validator definition the coordinator would like the followers to sign. */
        penumbra_core_component_stake_v1_Validator validator_definition;
        /* The validator vote the coordinator would like the followers to sign. */
        penumbra_core_component_governance_v1_ValidatorVoteBody validator_vote;
    } request;
} penumbra_custody_threshold_v1_CoordinatorRound1;

/* The message the coordinator sends in round 2 of the signing protocol. */
typedef struct _penumbra_custody_threshold_v1_CoordinatorRound2 {
    /* The underlying signing packages being sent to the followers, for each signature. */
    pb_callback_t signing_packages;
} penumbra_custody_threshold_v1_CoordinatorRound2;

/* A commitment along with a FROST identifier. */
typedef struct _penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments {
    /* The serialization of a FROST identifier. */
    pb_callback_t identifier;
    /* The commitments this person has produced for this round of signing. */
    bool has_commitments;
    penumbra_crypto_decaf377_frost_v1_SigningCommitments commitments;
} penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments;

/* A FROST signing package without a message.

 We structure things this way because the message is derived from the transaction plan.
 FROST expects the signing package to include the identified commitments *and*
 the message, but we have no need to include the message. */
typedef struct _penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage {
    pb_callback_t all_commitments;
} penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage;

/* The inner message that will be signed by the follower. */
typedef struct _penumbra_custody_threshold_v1_FollowerRound1_Inner {
    /* One signing commitment pair for each signature requested by the plan, in order. */
    pb_callback_t commitments;
} penumbra_custody_threshold_v1_FollowerRound1_Inner;

/* The first message the followers send back to the coordinator when signing. */
typedef struct _penumbra_custody_threshold_v1_FollowerRound1 {
    bool has_inner;
    penumbra_custody_threshold_v1_FollowerRound1_Inner inner;
    /* The verification key identifying the sender. */
    bool has_pk;
    penumbra_custody_threshold_v1_VerificationKey pk;
    /* A signature over the proto-encoded bytes of inner. */
    bool has_sig;
    penumbra_custody_threshold_v1_Signature sig;
} penumbra_custody_threshold_v1_FollowerRound1;

/* The inner message that will be signed by the follower. */
typedef struct _penumbra_custody_threshold_v1_FollowerRound2_Inner {
    /* One share for each signature requested by the plan, in order. */
    pb_callback_t shares;
} penumbra_custody_threshold_v1_FollowerRound2_Inner;

/* The second message the followers send back to the coordinator when signing. */
typedef struct _penumbra_custody_threshold_v1_FollowerRound2 {
    bool has_inner;
    penumbra_custody_threshold_v1_FollowerRound2_Inner inner;
    /* The verification key identifying the sender. */
    bool has_pk;
    penumbra_custody_threshold_v1_VerificationKey pk;
    /* A signature over the proto-encoded bytes of inner. */
    bool has_sig;
    penumbra_custody_threshold_v1_Signature sig;
} penumbra_custody_threshold_v1_FollowerRound2;

/* The first message we broadcast in the DKG protocol. */
typedef struct _penumbra_custody_threshold_v1_DKGRound1 {
    /* The package we're sending to other people */
    bool has_pkg;
    penumbra_crypto_decaf377_frost_v1_DKGRound1Package pkg;
    /* A commitment to a share of the nullifier-deriving key */
    pb_callback_t nullifier_commitment;
    /* An encryption key for the second round. */
    pb_callback_t epk;
    /* A verification key establishing an identity for the sender of this message. */
    pb_callback_t vk;
} penumbra_custody_threshold_v1_DKGRound1;

/* A round2 package, encrypted, along with an identifier for the recipient. */
typedef struct _penumbra_custody_threshold_v1_DKGRound2_TargetedPackage {
    /* A verification key identifying the recipient. */
    pb_callback_t vk;
    /* The ciphertext of an encrypted frost package for round 2. */
    pb_callback_t encrypted_package;
} penumbra_custody_threshold_v1_DKGRound2_TargetedPackage;

/* An inner message that will be signed. */
typedef struct _penumbra_custody_threshold_v1_DKGRound2_Inner {
    /* Encrypted packages for each recipient. */
    pb_callback_t encrypted_packages;
    /* An opening of the share of the nullifier-deriving key commitment */
    pb_callback_t nullifier;
} penumbra_custody_threshold_v1_DKGRound2_Inner;

/* The second message we broadcast in the DKG protocol. */
typedef struct _penumbra_custody_threshold_v1_DKGRound2 {
    bool has_inner;
    penumbra_custody_threshold_v1_DKGRound2_Inner inner;
    /* The verification key identifying the sender. */
    pb_callback_t vk;
    /* A signature over the proto-encoded inner message. */
    pb_callback_t sig;
} penumbra_custody_threshold_v1_DKGRound2;

#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define penumbra_custody_threshold_v1_VerificationKey_init_default \
    {                                                              \
        { {NULL}, NULL }                                           \
    }
#define penumbra_custody_threshold_v1_Signature_init_default \
    {                                                        \
        { {NULL}, NULL }                                     \
    }
#define penumbra_custody_threshold_v1_CoordinatorRound1_init_default     \
    {                                                                    \
        0, { penumbra_core_transaction_v1_TransactionPlan_init_default } \
    }
#define penumbra_custody_threshold_v1_CoordinatorRound2_init_default \
    {                                                                \
        { {NULL}, NULL }                                             \
    }
#define penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_init_default \
    { {{NULL}, NULL}, false, penumbra_crypto_decaf377_frost_v1_SigningCommitments_init_default }
#define penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_init_default \
    {                                                                                      \
        { {NULL}, NULL }                                                                   \
    }
#define penumbra_custody_threshold_v1_FollowerRound1_init_default                      \
    {                                                                                  \
        false, penumbra_custody_threshold_v1_FollowerRound1_Inner_init_default, false, \
            penumbra_custody_threshold_v1_VerificationKey_init_default, false,         \
            penumbra_custody_threshold_v1_Signature_init_default                       \
    }
#define penumbra_custody_threshold_v1_FollowerRound1_Inner_init_default \
    {                                                                   \
        { {NULL}, NULL }                                                \
    }
#define penumbra_custody_threshold_v1_FollowerRound2_init_default                      \
    {                                                                                  \
        false, penumbra_custody_threshold_v1_FollowerRound2_Inner_init_default, false, \
            penumbra_custody_threshold_v1_VerificationKey_init_default, false,         \
            penumbra_custody_threshold_v1_Signature_init_default                       \
    }
#define penumbra_custody_threshold_v1_FollowerRound2_Inner_init_default \
    {                                                                   \
        { {NULL}, NULL }                                                \
    }
#define penumbra_custody_threshold_v1_DKGRound1_init_default                                                      \
    {                                                                                                             \
        false, penumbra_crypto_decaf377_frost_v1_DKGRound1Package_init_default, {{NULL}, NULL}, {{NULL}, NULL}, { \
            {NULL}, NULL                                                                                          \
        }                                                                                                         \
    }
#define penumbra_custody_threshold_v1_DKGRound2_init_default                                                \
    {                                                                                                       \
        false, penumbra_custody_threshold_v1_DKGRound2_Inner_init_default, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_init_default \
    {                                                                        \
        {{NULL}, NULL}, { {NULL}, NULL }                                     \
    }
#define penumbra_custody_threshold_v1_DKGRound2_Inner_init_default \
    {                                                              \
        {{NULL}, NULL}, { {NULL}, NULL }                           \
    }
#define penumbra_custody_threshold_v1_VerificationKey_init_zero \
    {                                                           \
        { {NULL}, NULL }                                        \
    }
#define penumbra_custody_threshold_v1_Signature_init_zero \
    {                                                     \
        { {NULL}, NULL }                                  \
    }
#define penumbra_custody_threshold_v1_CoordinatorRound1_init_zero     \
    {                                                                 \
        0, { penumbra_core_transaction_v1_TransactionPlan_init_zero } \
    }
#define penumbra_custody_threshold_v1_CoordinatorRound2_init_zero \
    {                                                             \
        { {NULL}, NULL }                                          \
    }
#define penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_init_zero \
    { {{NULL}, NULL}, false, penumbra_crypto_decaf377_frost_v1_SigningCommitments_init_zero }
#define penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_init_zero \
    {                                                                                   \
        { {NULL}, NULL }                                                                \
    }
#define penumbra_custody_threshold_v1_FollowerRound1_init_zero                      \
    {                                                                               \
        false, penumbra_custody_threshold_v1_FollowerRound1_Inner_init_zero, false, \
            penumbra_custody_threshold_v1_VerificationKey_init_zero, false,         \
            penumbra_custody_threshold_v1_Signature_init_zero                       \
    }
#define penumbra_custody_threshold_v1_FollowerRound1_Inner_init_zero \
    {                                                                \
        { {NULL}, NULL }                                             \
    }
#define penumbra_custody_threshold_v1_FollowerRound2_init_zero                      \
    {                                                                               \
        false, penumbra_custody_threshold_v1_FollowerRound2_Inner_init_zero, false, \
            penumbra_custody_threshold_v1_VerificationKey_init_zero, false,         \
            penumbra_custody_threshold_v1_Signature_init_zero                       \
    }
#define penumbra_custody_threshold_v1_FollowerRound2_Inner_init_zero \
    {                                                                \
        { {NULL}, NULL }                                             \
    }
#define penumbra_custody_threshold_v1_DKGRound1_init_zero                                                      \
    {                                                                                                          \
        false, penumbra_crypto_decaf377_frost_v1_DKGRound1Package_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, { \
            {NULL}, NULL                                                                                       \
        }                                                                                                      \
    }
#define penumbra_custody_threshold_v1_DKGRound2_init_zero                                                \
    {                                                                                                    \
        false, penumbra_custody_threshold_v1_DKGRound2_Inner_init_zero, {{NULL}, NULL}, { {NULL}, NULL } \
    }
#define penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_init_zero \
    {                                                                     \
        {{NULL}, NULL}, { {NULL}, NULL }                                  \
    }
#define penumbra_custody_threshold_v1_DKGRound2_Inner_init_zero \
    {                                                           \
        {{NULL}, NULL}, { {NULL}, NULL }                        \
    }

/* Field tags (for use in manual encoding/decoding) */
#define penumbra_custody_threshold_v1_VerificationKey_inner_tag 1
#define penumbra_custody_threshold_v1_Signature_inner_tag 1
#define penumbra_custody_threshold_v1_CoordinatorRound1_plan_tag 1
#define penumbra_custody_threshold_v1_CoordinatorRound1_validator_definition_tag 2
#define penumbra_custody_threshold_v1_CoordinatorRound1_validator_vote_tag 3
#define penumbra_custody_threshold_v1_CoordinatorRound2_signing_packages_tag 1
#define penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_identifier_tag 1
#define penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_commitments_tag 2
#define penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_all_commitments_tag 1
#define penumbra_custody_threshold_v1_FollowerRound1_Inner_commitments_tag 1
#define penumbra_custody_threshold_v1_FollowerRound1_inner_tag 1
#define penumbra_custody_threshold_v1_FollowerRound1_pk_tag 2
#define penumbra_custody_threshold_v1_FollowerRound1_sig_tag 3
#define penumbra_custody_threshold_v1_FollowerRound2_Inner_shares_tag 1
#define penumbra_custody_threshold_v1_FollowerRound2_inner_tag 1
#define penumbra_custody_threshold_v1_FollowerRound2_pk_tag 2
#define penumbra_custody_threshold_v1_FollowerRound2_sig_tag 3
#define penumbra_custody_threshold_v1_DKGRound1_pkg_tag 1
#define penumbra_custody_threshold_v1_DKGRound1_nullifier_commitment_tag 2
#define penumbra_custody_threshold_v1_DKGRound1_epk_tag 3
#define penumbra_custody_threshold_v1_DKGRound1_vk_tag 4
#define penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_vk_tag 1
#define penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_encrypted_package_tag 2
#define penumbra_custody_threshold_v1_DKGRound2_Inner_encrypted_packages_tag 1
#define penumbra_custody_threshold_v1_DKGRound2_Inner_nullifier_tag 2
#define penumbra_custody_threshold_v1_DKGRound2_inner_tag 1
#define penumbra_custody_threshold_v1_DKGRound2_vk_tag 2
#define penumbra_custody_threshold_v1_DKGRound2_sig_tag 3

/* Struct field encoding specification for nanopb */
#define penumbra_custody_threshold_v1_VerificationKey_FIELDLIST(X, a) X(a, CALLBACK, SINGULAR, BYTES, inner, 1)
#define penumbra_custody_threshold_v1_VerificationKey_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_VerificationKey_DEFAULT NULL

#define penumbra_custody_threshold_v1_Signature_FIELDLIST(X, a) X(a, CALLBACK, SINGULAR, BYTES, inner, 1)
#define penumbra_custody_threshold_v1_Signature_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_Signature_DEFAULT NULL

#define penumbra_custody_threshold_v1_CoordinatorRound1_FIELDLIST(X, a)                            \
    X(a, STATIC, ONEOF, MESSAGE, (request, plan, request.plan), 1)                                 \
    X(a, STATIC, ONEOF, MESSAGE, (request, validator_definition, request.validator_definition), 2) \
    X(a, STATIC, ONEOF, MESSAGE, (request, validator_vote, request.validator_vote), 3)
#define penumbra_custody_threshold_v1_CoordinatorRound1_CALLBACK NULL
#define penumbra_custody_threshold_v1_CoordinatorRound1_DEFAULT NULL
#define penumbra_custody_threshold_v1_CoordinatorRound1_request_plan_MSGTYPE penumbra_core_transaction_v1_TransactionPlan
#define penumbra_custody_threshold_v1_CoordinatorRound1_request_validator_definition_MSGTYPE \
    penumbra_core_component_stake_v1_Validator
#define penumbra_custody_threshold_v1_CoordinatorRound1_request_validator_vote_MSGTYPE \
    penumbra_core_component_governance_v1_ValidatorVoteBody

#define penumbra_custody_threshold_v1_CoordinatorRound2_FIELDLIST(X, a) \
    X(a, CALLBACK, REPEATED, MESSAGE, signing_packages, 1)
#define penumbra_custody_threshold_v1_CoordinatorRound2_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_CoordinatorRound2_DEFAULT NULL
#define penumbra_custody_threshold_v1_CoordinatorRound2_signing_packages_MSGTYPE \
    penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage

#define penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, BYTES, identifier, 1)                                            \
    X(a, STATIC, OPTIONAL, MESSAGE, commitments, 2)
#define penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_DEFAULT NULL
#define penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_commitments_MSGTYPE \
    penumbra_crypto_decaf377_frost_v1_SigningCommitments

#define penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_FIELDLIST(X, a) \
    X(a, CALLBACK, REPEATED, MESSAGE, all_commitments, 1)
#define penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_DEFAULT NULL
#define penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_all_commitments_MSGTYPE \
    penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments

#define penumbra_custody_threshold_v1_FollowerRound1_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, inner, 1)                        \
    X(a, STATIC, OPTIONAL, MESSAGE, pk, 2)                           \
    X(a, STATIC, OPTIONAL, MESSAGE, sig, 3)
#define penumbra_custody_threshold_v1_FollowerRound1_CALLBACK NULL
#define penumbra_custody_threshold_v1_FollowerRound1_DEFAULT NULL
#define penumbra_custody_threshold_v1_FollowerRound1_inner_MSGTYPE penumbra_custody_threshold_v1_FollowerRound1_Inner
#define penumbra_custody_threshold_v1_FollowerRound1_pk_MSGTYPE penumbra_custody_threshold_v1_VerificationKey
#define penumbra_custody_threshold_v1_FollowerRound1_sig_MSGTYPE penumbra_custody_threshold_v1_Signature

#define penumbra_custody_threshold_v1_FollowerRound1_Inner_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, commitments, 1)
#define penumbra_custody_threshold_v1_FollowerRound1_Inner_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_FollowerRound1_Inner_DEFAULT NULL
#define penumbra_custody_threshold_v1_FollowerRound1_Inner_commitments_MSGTYPE \
    penumbra_crypto_decaf377_frost_v1_SigningCommitments

#define penumbra_custody_threshold_v1_FollowerRound2_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, inner, 1)                        \
    X(a, STATIC, OPTIONAL, MESSAGE, pk, 2)                           \
    X(a, STATIC, OPTIONAL, MESSAGE, sig, 3)
#define penumbra_custody_threshold_v1_FollowerRound2_CALLBACK NULL
#define penumbra_custody_threshold_v1_FollowerRound2_DEFAULT NULL
#define penumbra_custody_threshold_v1_FollowerRound2_inner_MSGTYPE penumbra_custody_threshold_v1_FollowerRound2_Inner
#define penumbra_custody_threshold_v1_FollowerRound2_pk_MSGTYPE penumbra_custody_threshold_v1_VerificationKey
#define penumbra_custody_threshold_v1_FollowerRound2_sig_MSGTYPE penumbra_custody_threshold_v1_Signature

#define penumbra_custody_threshold_v1_FollowerRound2_Inner_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, shares, 1)
#define penumbra_custody_threshold_v1_FollowerRound2_Inner_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_FollowerRound2_Inner_DEFAULT NULL
#define penumbra_custody_threshold_v1_FollowerRound2_Inner_shares_MSGTYPE penumbra_crypto_decaf377_frost_v1_SignatureShare

#define penumbra_custody_threshold_v1_DKGRound1_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, pkg, 1)                     \
    X(a, CALLBACK, SINGULAR, BYTES, nullifier_commitment, 2)    \
    X(a, CALLBACK, SINGULAR, BYTES, epk, 3)                     \
    X(a, CALLBACK, SINGULAR, BYTES, vk, 4)
#define penumbra_custody_threshold_v1_DKGRound1_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_DKGRound1_DEFAULT NULL
#define penumbra_custody_threshold_v1_DKGRound1_pkg_MSGTYPE penumbra_crypto_decaf377_frost_v1_DKGRound1Package

#define penumbra_custody_threshold_v1_DKGRound2_FIELDLIST(X, a) \
    X(a, STATIC, OPTIONAL, MESSAGE, inner, 1)                   \
    X(a, CALLBACK, SINGULAR, BYTES, vk, 2)                      \
    X(a, CALLBACK, SINGULAR, BYTES, sig, 3)
#define penumbra_custody_threshold_v1_DKGRound2_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_DKGRound2_DEFAULT NULL
#define penumbra_custody_threshold_v1_DKGRound2_inner_MSGTYPE penumbra_custody_threshold_v1_DKGRound2_Inner

#define penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_FIELDLIST(X, a) \
    X(a, CALLBACK, SINGULAR, BYTES, vk, 1)                                      \
    X(a, CALLBACK, SINGULAR, BYTES, encrypted_package, 2)
#define penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_DEFAULT NULL

#define penumbra_custody_threshold_v1_DKGRound2_Inner_FIELDLIST(X, a) \
    X(a, CALLBACK, REPEATED, MESSAGE, encrypted_packages, 1)          \
    X(a, CALLBACK, SINGULAR, BYTES, nullifier, 2)
#define penumbra_custody_threshold_v1_DKGRound2_Inner_CALLBACK pb_default_field_callback
#define penumbra_custody_threshold_v1_DKGRound2_Inner_DEFAULT NULL
#define penumbra_custody_threshold_v1_DKGRound2_Inner_encrypted_packages_MSGTYPE \
    penumbra_custody_threshold_v1_DKGRound2_TargetedPackage

extern const pb_msgdesc_t penumbra_custody_threshold_v1_VerificationKey_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_Signature_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_CoordinatorRound1_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_CoordinatorRound2_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_FollowerRound1_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_FollowerRound1_Inner_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_FollowerRound2_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_FollowerRound2_Inner_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_DKGRound1_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_DKGRound2_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_msg;
extern const pb_msgdesc_t penumbra_custody_threshold_v1_DKGRound2_Inner_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define penumbra_custody_threshold_v1_VerificationKey_fields &penumbra_custody_threshold_v1_VerificationKey_msg
#define penumbra_custody_threshold_v1_Signature_fields &penumbra_custody_threshold_v1_Signature_msg
#define penumbra_custody_threshold_v1_CoordinatorRound1_fields &penumbra_custody_threshold_v1_CoordinatorRound1_msg
#define penumbra_custody_threshold_v1_CoordinatorRound2_fields &penumbra_custody_threshold_v1_CoordinatorRound2_msg
#define penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_fields \
    &penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_msg
#define penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_fields \
    &penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_msg
#define penumbra_custody_threshold_v1_FollowerRound1_fields &penumbra_custody_threshold_v1_FollowerRound1_msg
#define penumbra_custody_threshold_v1_FollowerRound1_Inner_fields &penumbra_custody_threshold_v1_FollowerRound1_Inner_msg
#define penumbra_custody_threshold_v1_FollowerRound2_fields &penumbra_custody_threshold_v1_FollowerRound2_msg
#define penumbra_custody_threshold_v1_FollowerRound2_Inner_fields &penumbra_custody_threshold_v1_FollowerRound2_Inner_msg
#define penumbra_custody_threshold_v1_DKGRound1_fields &penumbra_custody_threshold_v1_DKGRound1_msg
#define penumbra_custody_threshold_v1_DKGRound2_fields &penumbra_custody_threshold_v1_DKGRound2_msg
#define penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_fields \
    &penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_msg
#define penumbra_custody_threshold_v1_DKGRound2_Inner_fields &penumbra_custody_threshold_v1_DKGRound2_Inner_msg

/* Maximum encoded size of messages (where known) */
#if defined(penumbra_core_transaction_v1_TransactionPlan_size) && \
    defined(penumbra_core_component_stake_v1_Validator_size) &&   \
    defined(penumbra_core_component_governance_v1_ValidatorVoteBody_size)
union penumbra_custody_threshold_v1_CoordinatorRound1_request_size_union {
    char f1[(6 + penumbra_core_transaction_v1_TransactionPlan_size)];
    char f2[(6 + penumbra_core_component_stake_v1_Validator_size)];
    char f3[(6 + penumbra_core_component_governance_v1_ValidatorVoteBody_size)];
};
#endif
/* penumbra_custody_threshold_v1_VerificationKey_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_Signature_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_CoordinatorRound2_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_CoordinatorRound2_IdentifiedCommitments_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_CoordinatorRound2_PartialSigningPackage_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_FollowerRound1_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_FollowerRound1_Inner_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_FollowerRound2_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_FollowerRound2_Inner_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_DKGRound1_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_DKGRound2_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_DKGRound2_TargetedPackage_size depends on runtime parameters */
/* penumbra_custody_threshold_v1_DKGRound2_Inner_size depends on runtime parameters */
#if defined(penumbra_core_transaction_v1_TransactionPlan_size) && \
    defined(penumbra_core_component_stake_v1_Validator_size) &&   \
    defined(penumbra_core_component_governance_v1_ValidatorVoteBody_size)
#define penumbra_custody_threshold_v1_CoordinatorRound1_size \
    (0 + sizeof(union penumbra_custody_threshold_v1_CoordinatorRound1_request_size_union))
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
