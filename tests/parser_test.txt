/*******************************************************************************
*   (c) 2018 - 2023 Zondax AG
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
********************************************************************************/

// #{TODO} --> Apply tests that check this app's encoding/libraries

#include "gmock/gmock.h"

#include <vector>
#include <iostream>
#include <hexutils.h>
#include "parser_txdef.h"
#include "parser.h"
#include "parser_impl.h"
#include "keys_def.h"
#include "crypto_helper.h"
#include "zxformat.h"

using namespace std;

TEST(SCALE, skvTest) {
    const std::string spending_key = "5614d258049853afbf1ca97bec7ccf8e64e0d90a3d417ef0f3c6f7431685e5c1";
    const std::string expected_fvk = "3cd58bbb8725bfe4566504b04d7a31b67bb67fd5d09a28364ac7ac2c2fd8710e4fb0d8c51486fc24938ca96564842a84201d266c92b72761e4e99a16b3405103";

    keys_t keys;
    parseHexString(keys.skb, KEY_LEN, spending_key.c_str());
    compute_effect_hash();

    char hexstr[200];
    array_to_hexstr(hexstr, 200, keys.fvk, sizeof(keys.fvk));
    std::string str(hexstr);

    EXPECT_EQ(str, expected_fvk);
}
